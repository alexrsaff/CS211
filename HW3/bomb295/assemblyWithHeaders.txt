
bomb:     file format elf32-i386
bomb
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08048980

Program Header:
    PHDR off    0x00000034 vaddr 0x08048034 paddr 0x08048034 align 2**2
         filesz 0x00000120 memsz 0x00000120 flags r-x
  INTERP off    0x00000154 vaddr 0x08048154 paddr 0x08048154 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x08048000 paddr 0x08048000 align 2**12
         filesz 0x000035d0 memsz 0x000035d0 flags r-x
    LOAD off    0x00003f08 vaddr 0x0804cf08 paddr 0x0804cf08 align 2**12
         filesz 0x000008b8 memsz 0x00000f88 flags rw-
 DYNAMIC off    0x00003f14 vaddr 0x0804cf14 paddr 0x0804cf14 align 2**2
         filesz 0x000000e8 memsz 0x000000e8 flags rw-
    NOTE off    0x00000168 vaddr 0x08048168 paddr 0x08048168 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
EH_FRAME off    0x00002b64 vaddr 0x0804ab64 paddr 0x0804ab64 align 2**2
         filesz 0x0000011c memsz 0x0000011c flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
   RELRO off    0x00003f08 vaddr 0x0804cf08 paddr 0x0804cf08 align 2**0
         filesz 0x000000f8 memsz 0x000000f8 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x08048760
  FINI                 0x0804a154
  INIT_ARRAY           0x0804cf08
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x0804cf0c
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x080481ac
  STRTAB               0x0804840c
  SYMTAB               0x080481dc
  STRSZ                0x00000195
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x0804d000
  PLTRELSZ             0x000000e8
  PLTREL               0x00000011
  JMPREL               0x08048678
  REL                  0x08048658
  RELSZ                0x00000020
  RELENT               0x00000008
  VERNEED              0x080485e8
  VERNEEDNUM           0x00000001
  VERSYM               0x080485a2

Version References:
  required from libc.so.6:
    0x0d696913 0x00 07 GLIBC_2.3
    0x0d696911 0x00 06 GLIBC_2.1
    0x0d696917 0x00 05 GLIBC_2.7
    0x09691974 0x00 04 GLIBC_2.3.4
    0x0d696914 0x00 03 GLIBC_2.4
    0x0d696910 0x00 02 GLIBC_2.0

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  08048154  08048154  00000154  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  08048168  08048168  00000168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  08048188  08048188  00000188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000030  080481ac  080481ac  000001ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000230  080481dc  080481dc  000001dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000195  0804840c  0804840c  0000040c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000046  080485a2  080485a2  000005a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000070  080485e8  080485e8  000005e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000020  08048658  08048658  00000658  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      000000e8  08048678  08048678  00000678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000023  08048760  08048760  00000760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          000001e0  08048790  08048790  00000790  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  08048970  08048970  00000970  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         000017d2  08048980  08048980  00000980  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000014  0804a154  0804a154  00002154  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       000009e1  0804a180  0804a180  00002180  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000011c  0804ab64  0804ab64  00002b64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000950  0804ac80  0804ac80  00002c80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000004  0804cf08  0804cf08  00003f08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000004  0804cf0c  0804cf0c  00003f0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .jcr          00000004  0804cf10  0804cf10  00003f10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .dynamic      000000e8  0804cf14  0804cf14  00003f14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got          00000004  0804cffc  0804cffc  00003ffc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got.plt      00000080  0804d000  0804d000  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         00000740  0804d080  0804d080  00004080  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          000006d0  0804d7c0  0804d7c0  000047c0  2**5
                  ALLOC
 26 .comment      00000035  00000000  00000000  000047c0  2**0
                  CONTENTS, READONLY
 27 .debug_aranges 00000020  00000000  00000000  000047f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_info   00000857  00000000  00000000  00004815  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_abbrev 00000194  00000000  00000000  0000506c  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_line   0000016a  00000000  00000000  00005200  2**0
                  CONTENTS, READONLY, DEBUGGING
 31 .debug_str    00000323  00000000  00000000  0000536a  2**0
                  CONTENTS, READONLY, DEBUGGING
 32 .debug_loc    000001cd  00000000  00000000  0000568d  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08048154 l    d  .interp	00000000              .interp
08048168 l    d  .note.ABI-tag	00000000              .note.ABI-tag
08048188 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
080481ac l    d  .gnu.hash	00000000              .gnu.hash
080481dc l    d  .dynsym	00000000              .dynsym
0804840c l    d  .dynstr	00000000              .dynstr
080485a2 l    d  .gnu.version	00000000              .gnu.version
080485e8 l    d  .gnu.version_r	00000000              .gnu.version_r
08048658 l    d  .rel.dyn	00000000              .rel.dyn
08048678 l    d  .rel.plt	00000000              .rel.plt
08048760 l    d  .init	00000000              .init
08048790 l    d  .plt	00000000              .plt
08048970 l    d  .plt.got	00000000              .plt.got
08048980 l    d  .text	00000000              .text
0804a154 l    d  .fini	00000000              .fini
0804a180 l    d  .rodata	00000000              .rodata
0804ab64 l    d  .eh_frame_hdr	00000000              .eh_frame_hdr
0804ac80 l    d  .eh_frame	00000000              .eh_frame
0804cf08 l    d  .init_array	00000000              .init_array
0804cf0c l    d  .fini_array	00000000              .fini_array
0804cf10 l    d  .jcr	00000000              .jcr
0804cf14 l    d  .dynamic	00000000              .dynamic
0804cffc l    d  .got	00000000              .got
0804d000 l    d  .got.plt	00000000              .got.plt
0804d080 l    d  .data	00000000              .data
0804d7c0 l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    d  .debug_aranges	00000000              .debug_aranges
00000000 l    d  .debug_info	00000000              .debug_info
00000000 l    d  .debug_abbrev	00000000              .debug_abbrev
00000000 l    d  .debug_line	00000000              .debug_line
00000000 l    d  .debug_str	00000000              .debug_str
00000000 l    d  .debug_loc	00000000              .debug_loc
00000000 l    df *ABS*	00000000              crtstuff.c
0804cf10 l     O .jcr	00000000              __JCR_LIST__
080489c0 l     F .text	00000000              deregister_tm_clones
080489f0 l     F .text	00000000              register_tm_clones
08048a30 l     F .text	00000000              __do_global_dtors_aux
0804d7e8 l     O .bss	00000001              completed.7209
0804cf0c l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
08048a50 l     F .text	00000000              frame_dummy
0804cf08 l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              bomb.c
00000000 l    df *ABS*	00000000              phases.c
0804a3a0 l     O .rodata	00000040              array.3265
00000000 l    df *ABS*	00000000              support.c
080490b1 l     F .text	0000005a              sig_handler
00000000 l    df *ABS*	00000000              driverlib.c
080495cd l     F .text	000000d4              rio_readlineb
00000000 l    df *ABS*	00000000              crtstuff.c
0804b5cc l     O .eh_frame	00000000              __FRAME_END__
0804cf10 l     O .jcr	00000000              __JCR_END__
00000000 l    df *ABS*	00000000              
0804cf0c l       .init_array	00000000              __init_array_end
0804cf14 l     O .dynamic	00000000              _DYNAMIC
0804cf08 l       .init_array	00000000              __init_array_start
0804ab64 l       .eh_frame_hdr	00000000              __GNU_EH_FRAME_HDR
0804d000 l     O .got.plt	00000000              _GLOBAL_OFFSET_TABLE_
0804a150 g     F .text	00000002              __libc_csu_fini
080492d6 g     F .text	00000045              skip
08049574 g     F .text	00000036              phase_defused
0804d0c4 g     O .data	0000000c              n31
00000000       F *UND*	00000000              read@@GLIBC_2.0
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
080489b0 g     F .text	00000004              .hidden __x86.get_pc_thunk.bx
0804d080  w      .data	00000000              data_start
0804d800 g     O .bss	00000640              input_strings
00000000       F *UND*	00000000              fflush@@GLIBC_2.0
0804d0dc g     O .data	0000000c              n33
0804d7c0 g     O .bss	00000004              stderr@@GLIBC_2.0
00000000       F *UND*	00000000              fgets@@GLIBC_2.0
0804d7c0 g       .data	00000000              _edata
00000000       F *UND*	00000000              signal@@GLIBC_2.0
00000000       F *UND*	00000000              sleep@@GLIBC_2.0
0804d118 g     O .data	0000000c              n44
0804d130 g     O .data	0000000c              n46
0804d100 g     O .data	0000000c              n42
0804d148 g     O .data	0000000c              n48
0804a154 g     F .fini	00000000              _fini
00000000       F *UND*	00000000              alarm@@GLIBC_2.0
00000000       F *UND*	00000000              __stack_chk_fail@@GLIBC_2.4
0804d7ec g     O .bss	00000004              num_input_strings
08048d90 g     F .text	000000a9              phase_5
0804929c g     F .text	00000002              initialize_bomb_solve
08048eee g     F .text	00000048              phase_7
0804929e g     F .text	00000038              blank_line
0804906d g     F .text	00000044              phase_9
080496a1 g     F .text	000007ca              submitr
08048caa g     F .text	0000007b              phase_3
08048c2d g     F .text	0000005c              phase_1
0804910b g     F .text	0000001f              invalid_phase
08049ea0 g     F .text	000001d2              init_driver
00000000       F *UND*	00000000              strcpy@@GLIBC_2.0
0804d16c g     O .data	0000000c              node3
08049403 g     F .text	0000003d              explode_bomb
00000000       F *UND*	00000000              gethostname@@GLIBC_2.0
0804d154 g     O .data	0000000c              node1
00000000       F *UND*	00000000              getenv@@GLIBC_2.0
00000000       F *UND*	00000000              malloc@@GLIBC_2.0
0804d080 g       .data	00000000              __data_start
00000000       F *UND*	00000000              puts@@GLIBC_2.0
0804d184 g     O .data	0000000c              node5
00000000       F *UND*	00000000              __memmove_chk@@GLIBC_2.3.4
00000000  w      *UND*	00000000              __gmon_start__
00000000       F *UND*	00000000              exit@@GLIBC_2.0
0804d084 g     O .data	00000000              .hidden __dso_handle
0804901c g     F .text	00000051              fun9
0804a184 g     O .rodata	00000004              _IO_stdin_used
0804d0b8 g     O .data	0000000c              n22
0804d5c0 g     O .data	00000200              host_table
0804d0a0 g     O .data	0000000c              n1
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.0
00000000       F *UND*	00000000              write@@GLIBC_2.0
0804912a g     F .text	0000001f              string_length
00000000       F *UND*	00000000              strcasecmp@@GLIBC_2.0
0804a0f0 g     F .text	0000005d              __libc_csu_init
0804d7e0 g     O .bss	00000004              stdin@@GLIBC_2.0
00000000       F *UND*	00000000              __isoc99_sscanf@@GLIBC_2.7
0804d0e8 g     O .data	0000000c              n34
00000000       F *UND*	00000000              fopen@@GLIBC_2.1
08048e39 g     F .text	00000043              func6
0804d0d0 g     O .data	0000000c              n32
0804de90 g       .bss	00000000              _end
00000000       F *UND*	00000000              __errno_location@@GLIBC_2.0
08048980 g     F .text	00000000              _start
0804a180 g     O .rodata	00000004              _fp_hw
0804d7f0 g     O .bss	00000004              infile
080495aa g     F .text	00000023              sigalrm_handler
08049e6b g     F .text	00000035              init_timeout
0804d7e4 g     O .bss	00000004              stdout@@GLIBC_2.0
0804d7c0 g       .bss	00000000              __bss_start
0804d1a0 g     O .data	00000400              userid
08048a7b g     F .text	000001b2              main
00000000       F *UND*	00000000              __printf_chk@@GLIBC_2.3.4
0804d13c g     O .data	0000000c              n47
0804d10c g     O .data	0000000c              n43
0804d0f4 g     O .data	0000000c              n41
0804947b g     F .text	000000f9              read_line
0804d124 g     O .data	0000000c              n45
08049149 g     F .text	00000065              strings_not_equal
08048d25 g     F .text	0000006b              phase_4
08048f36 g     F .text	000000e6              phase_8
08048e7c g     F .text	00000072              phase_6
0804de40 g     O .bss	00000050              scratch
00000000  w      *UND*	00000000              _Jv_RegisterClasses
0804a072 g     F .text	0000007c              driver_post
0804931b g     F .text	000000e8              send_msg
08048c89 g     F .text	00000021              phase_2
0804d5a0 g     O .data	00000004              bomb_id
00000000       F *UND*	00000000              socket@@GLIBC_2.0
0804d7c0 g     O .data	00000000              .hidden __TMC_END__
00000000       F *UND*	00000000              __fprintf_chk@@GLIBC_2.3.4
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
0804d160 g     O .data	0000000c              node2
0804d178 g     O .data	0000000c              node4
00000000       F *UND*	00000000              gethostbyname@@GLIBC_2.0
00000000       F *UND*	00000000              strtol@@GLIBC_2.0
0804d190 g     O .data	0000000c              node6
00000000       F *UND*	00000000              connect@@GLIBC_2.0
08048760 g     F .init	00000000              _init
00000000       F *UND*	00000000              close@@GLIBC_2.0
08049440 g     F .text	0000003b              read_six_numbers
0804d0ac g     O .data	0000000c              n21
080491ae g     F .text	000000ee              initialize_bomb
00000000       F *UND*	00000000              __ctype_b_loc@@GLIBC_2.3
00000000       F *UND*	00000000              __sprintf_chk@@GLIBC_2.3.4



Disassembly of section .init:

08048760 <_init>:
 8048760:	53                   	push   %ebx
 8048761:	83 ec 08             	sub    $0x8,%esp
 8048764:	e8 47 02 00 00       	call   80489b0 <__x86.get_pc_thunk.bx>
 8048769:	81 c3 97 48 00 00    	add    $0x4897,%ebx
 804876f:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048775:	85 c0                	test   %eax,%eax
 8048777:	74 05                	je     804877e <_init+0x1e>
 8048779:	e8 f2 01 00 00       	call   8048970 <__sprintf_chk@plt+0x10>
 804877e:	83 c4 08             	add    $0x8,%esp
 8048781:	5b                   	pop    %ebx
 8048782:	c3                   	ret    

Disassembly of section .plt:

08048790 <read@plt-0x10>:
 8048790:	ff 35 04 d0 04 08    	pushl  0x804d004
 8048796:	ff 25 08 d0 04 08    	jmp    *0x804d008
 804879c:	00 00                	add    %al,(%eax)
	...

080487a0 <read@plt>:
 80487a0:	ff 25 0c d0 04 08    	jmp    *0x804d00c
 80487a6:	68 00 00 00 00       	push   $0x0
 80487ab:	e9 e0 ff ff ff       	jmp    8048790 <_init+0x30>

080487b0 <fflush@plt>:
 80487b0:	ff 25 10 d0 04 08    	jmp    *0x804d010
 80487b6:	68 08 00 00 00       	push   $0x8
 80487bb:	e9 d0 ff ff ff       	jmp    8048790 <_init+0x30>

080487c0 <fgets@plt>:
 80487c0:	ff 25 14 d0 04 08    	jmp    *0x804d014
 80487c6:	68 10 00 00 00       	push   $0x10
 80487cb:	e9 c0 ff ff ff       	jmp    8048790 <_init+0x30>

080487d0 <signal@plt>:
 80487d0:	ff 25 18 d0 04 08    	jmp    *0x804d018
 80487d6:	68 18 00 00 00       	push   $0x18
 80487db:	e9 b0 ff ff ff       	jmp    8048790 <_init+0x30>

080487e0 <sleep@plt>:
 80487e0:	ff 25 1c d0 04 08    	jmp    *0x804d01c
 80487e6:	68 20 00 00 00       	push   $0x20
 80487eb:	e9 a0 ff ff ff       	jmp    8048790 <_init+0x30>

080487f0 <alarm@plt>:
 80487f0:	ff 25 20 d0 04 08    	jmp    *0x804d020
 80487f6:	68 28 00 00 00       	push   $0x28
 80487fb:	e9 90 ff ff ff       	jmp    8048790 <_init+0x30>

08048800 <__stack_chk_fail@plt>:
 8048800:	ff 25 24 d0 04 08    	jmp    *0x804d024
 8048806:	68 30 00 00 00       	push   $0x30
 804880b:	e9 80 ff ff ff       	jmp    8048790 <_init+0x30>

08048810 <strcpy@plt>:
 8048810:	ff 25 28 d0 04 08    	jmp    *0x804d028
 8048816:	68 38 00 00 00       	push   $0x38
 804881b:	e9 70 ff ff ff       	jmp    8048790 <_init+0x30>

08048820 <gethostname@plt>:
 8048820:	ff 25 2c d0 04 08    	jmp    *0x804d02c
 8048826:	68 40 00 00 00       	push   $0x40
 804882b:	e9 60 ff ff ff       	jmp    8048790 <_init+0x30>

08048830 <getenv@plt>:
 8048830:	ff 25 30 d0 04 08    	jmp    *0x804d030
 8048836:	68 48 00 00 00       	push   $0x48
 804883b:	e9 50 ff ff ff       	jmp    8048790 <_init+0x30>

08048840 <malloc@plt>:
 8048840:	ff 25 34 d0 04 08    	jmp    *0x804d034
 8048846:	68 50 00 00 00       	push   $0x50
 804884b:	e9 40 ff ff ff       	jmp    8048790 <_init+0x30>

08048850 <puts@plt>:
 8048850:	ff 25 38 d0 04 08    	jmp    *0x804d038
 8048856:	68 58 00 00 00       	push   $0x58
 804885b:	e9 30 ff ff ff       	jmp    8048790 <_init+0x30>

08048860 <__memmove_chk@plt>:
 8048860:	ff 25 3c d0 04 08    	jmp    *0x804d03c
 8048866:	68 60 00 00 00       	push   $0x60
 804886b:	e9 20 ff ff ff       	jmp    8048790 <_init+0x30>

08048870 <exit@plt>:
 8048870:	ff 25 40 d0 04 08    	jmp    *0x804d040
 8048876:	68 68 00 00 00       	push   $0x68
 804887b:	e9 10 ff ff ff       	jmp    8048790 <_init+0x30>

08048880 <__libc_start_main@plt>:
 8048880:	ff 25 44 d0 04 08    	jmp    *0x804d044
 8048886:	68 70 00 00 00       	push   $0x70
 804888b:	e9 00 ff ff ff       	jmp    8048790 <_init+0x30>

08048890 <write@plt>:
 8048890:	ff 25 48 d0 04 08    	jmp    *0x804d048
 8048896:	68 78 00 00 00       	push   $0x78
 804889b:	e9 f0 fe ff ff       	jmp    8048790 <_init+0x30>

080488a0 <strcasecmp@plt>:
 80488a0:	ff 25 4c d0 04 08    	jmp    *0x804d04c
 80488a6:	68 80 00 00 00       	push   $0x80
 80488ab:	e9 e0 fe ff ff       	jmp    8048790 <_init+0x30>

080488b0 <__isoc99_sscanf@plt>:
 80488b0:	ff 25 50 d0 04 08    	jmp    *0x804d050
 80488b6:	68 88 00 00 00       	push   $0x88
 80488bb:	e9 d0 fe ff ff       	jmp    8048790 <_init+0x30>

080488c0 <fopen@plt>:
 80488c0:	ff 25 54 d0 04 08    	jmp    *0x804d054
 80488c6:	68 90 00 00 00       	push   $0x90
 80488cb:	e9 c0 fe ff ff       	jmp    8048790 <_init+0x30>

080488d0 <__errno_location@plt>:
 80488d0:	ff 25 58 d0 04 08    	jmp    *0x804d058
 80488d6:	68 98 00 00 00       	push   $0x98
 80488db:	e9 b0 fe ff ff       	jmp    8048790 <_init+0x30>

080488e0 <__printf_chk@plt>:
 80488e0:	ff 25 5c d0 04 08    	jmp    *0x804d05c
 80488e6:	68 a0 00 00 00       	push   $0xa0
 80488eb:	e9 a0 fe ff ff       	jmp    8048790 <_init+0x30>

080488f0 <socket@plt>:
 80488f0:	ff 25 60 d0 04 08    	jmp    *0x804d060
 80488f6:	68 a8 00 00 00       	push   $0xa8
 80488fb:	e9 90 fe ff ff       	jmp    8048790 <_init+0x30>

08048900 <__fprintf_chk@plt>:
 8048900:	ff 25 64 d0 04 08    	jmp    *0x804d064
 8048906:	68 b0 00 00 00       	push   $0xb0
 804890b:	e9 80 fe ff ff       	jmp    8048790 <_init+0x30>

08048910 <gethostbyname@plt>:
 8048910:	ff 25 68 d0 04 08    	jmp    *0x804d068
 8048916:	68 b8 00 00 00       	push   $0xb8
 804891b:	e9 70 fe ff ff       	jmp    8048790 <_init+0x30>

08048920 <strtol@plt>:
 8048920:	ff 25 6c d0 04 08    	jmp    *0x804d06c
 8048926:	68 c0 00 00 00       	push   $0xc0
 804892b:	e9 60 fe ff ff       	jmp    8048790 <_init+0x30>

08048930 <connect@plt>:
 8048930:	ff 25 70 d0 04 08    	jmp    *0x804d070
 8048936:	68 c8 00 00 00       	push   $0xc8
 804893b:	e9 50 fe ff ff       	jmp    8048790 <_init+0x30>

08048940 <close@plt>:
 8048940:	ff 25 74 d0 04 08    	jmp    *0x804d074
 8048946:	68 d0 00 00 00       	push   $0xd0
 804894b:	e9 40 fe ff ff       	jmp    8048790 <_init+0x30>

08048950 <__ctype_b_loc@plt>:
 8048950:	ff 25 78 d0 04 08    	jmp    *0x804d078
 8048956:	68 d8 00 00 00       	push   $0xd8
 804895b:	e9 30 fe ff ff       	jmp    8048790 <_init+0x30>

08048960 <__sprintf_chk@plt>:
 8048960:	ff 25 7c d0 04 08    	jmp    *0x804d07c
 8048966:	68 e0 00 00 00       	push   $0xe0
 804896b:	e9 20 fe ff ff       	jmp    8048790 <_init+0x30>

Disassembly of section .plt.got:

08048970 <.plt.got>:
 8048970:	ff 25 fc cf 04 08    	jmp    *0x804cffc
 8048976:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048980 <_start>:
 8048980:	31 ed                	xor    %ebp,%ebp
 8048982:	5e                   	pop    %esi
 8048983:	89 e1                	mov    %esp,%ecx
 8048985:	83 e4 f0             	and    $0xfffffff0,%esp
 8048988:	50                   	push   %eax
 8048989:	54                   	push   %esp
 804898a:	52                   	push   %edx
 804898b:	68 50 a1 04 08       	push   $0x804a150
 8048990:	68 f0 a0 04 08       	push   $0x804a0f0
 8048995:	51                   	push   %ecx
 8048996:	56                   	push   %esi
 8048997:	68 7b 8a 04 08       	push   $0x8048a7b
 804899c:	e8 df fe ff ff       	call   8048880 <__libc_start_main@plt>
 80489a1:	f4                   	hlt    
 80489a2:	66 90                	xchg   %ax,%ax
 80489a4:	66 90                	xchg   %ax,%ax
 80489a6:	66 90                	xchg   %ax,%ax
 80489a8:	66 90                	xchg   %ax,%ax
 80489aa:	66 90                	xchg   %ax,%ax
 80489ac:	66 90                	xchg   %ax,%ax
 80489ae:	66 90                	xchg   %ax,%ax

080489b0 <__x86.get_pc_thunk.bx>:
 80489b0:	8b 1c 24             	mov    (%esp),%ebx
 80489b3:	c3                   	ret    
 80489b4:	66 90                	xchg   %ax,%ax
 80489b6:	66 90                	xchg   %ax,%ax
 80489b8:	66 90                	xchg   %ax,%ax
 80489ba:	66 90                	xchg   %ax,%ax
 80489bc:	66 90                	xchg   %ax,%ax
 80489be:	66 90                	xchg   %ax,%ax

080489c0 <deregister_tm_clones>:
 80489c0:	b8 c3 d7 04 08       	mov    $0x804d7c3,%eax
 80489c5:	2d c0 d7 04 08       	sub    $0x804d7c0,%eax
 80489ca:	83 f8 06             	cmp    $0x6,%eax
 80489cd:	76 1a                	jbe    80489e9 <deregister_tm_clones+0x29>
 80489cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80489d4:	85 c0                	test   %eax,%eax
 80489d6:	74 11                	je     80489e9 <deregister_tm_clones+0x29>
 80489d8:	55                   	push   %ebp
 80489d9:	89 e5                	mov    %esp,%ebp
 80489db:	83 ec 14             	sub    $0x14,%esp
 80489de:	68 c0 d7 04 08       	push   $0x804d7c0
 80489e3:	ff d0                	call   *%eax
 80489e5:	83 c4 10             	add    $0x10,%esp
 80489e8:	c9                   	leave  
 80489e9:	f3 c3                	repz ret 
 80489eb:	90                   	nop
 80489ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080489f0 <register_tm_clones>:
 80489f0:	b8 c0 d7 04 08       	mov    $0x804d7c0,%eax
 80489f5:	2d c0 d7 04 08       	sub    $0x804d7c0,%eax
 80489fa:	c1 f8 02             	sar    $0x2,%eax
 80489fd:	89 c2                	mov    %eax,%edx
 80489ff:	c1 ea 1f             	shr    $0x1f,%edx
 8048a02:	01 d0                	add    %edx,%eax
 8048a04:	d1 f8                	sar    %eax
 8048a06:	74 1b                	je     8048a23 <register_tm_clones+0x33>
 8048a08:	ba 00 00 00 00       	mov    $0x0,%edx
 8048a0d:	85 d2                	test   %edx,%edx
 8048a0f:	74 12                	je     8048a23 <register_tm_clones+0x33>
 8048a11:	55                   	push   %ebp
 8048a12:	89 e5                	mov    %esp,%ebp
 8048a14:	83 ec 10             	sub    $0x10,%esp
 8048a17:	50                   	push   %eax
 8048a18:	68 c0 d7 04 08       	push   $0x804d7c0
 8048a1d:	ff d2                	call   *%edx
 8048a1f:	83 c4 10             	add    $0x10,%esp
 8048a22:	c9                   	leave  
 8048a23:	f3 c3                	repz ret 
 8048a25:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048a29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048a30 <__do_global_dtors_aux>:
 8048a30:	80 3d e8 d7 04 08 00 	cmpb   $0x0,0x804d7e8
 8048a37:	75 13                	jne    8048a4c <__do_global_dtors_aux+0x1c>
 8048a39:	55                   	push   %ebp
 8048a3a:	89 e5                	mov    %esp,%ebp
 8048a3c:	83 ec 08             	sub    $0x8,%esp
 8048a3f:	e8 7c ff ff ff       	call   80489c0 <deregister_tm_clones>
 8048a44:	c6 05 e8 d7 04 08 01 	movb   $0x1,0x804d7e8
 8048a4b:	c9                   	leave  
 8048a4c:	f3 c3                	repz ret 
 8048a4e:	66 90                	xchg   %ax,%ax

08048a50 <frame_dummy>:
 8048a50:	b8 10 cf 04 08       	mov    $0x804cf10,%eax
 8048a55:	8b 10                	mov    (%eax),%edx
 8048a57:	85 d2                	test   %edx,%edx
 8048a59:	75 05                	jne    8048a60 <frame_dummy+0x10>
 8048a5b:	eb 93                	jmp    80489f0 <register_tm_clones>
 8048a5d:	8d 76 00             	lea    0x0(%esi),%esi
 8048a60:	ba 00 00 00 00       	mov    $0x0,%edx
 8048a65:	85 d2                	test   %edx,%edx
 8048a67:	74 f2                	je     8048a5b <frame_dummy+0xb>
 8048a69:	55                   	push   %ebp
 8048a6a:	89 e5                	mov    %esp,%ebp
 8048a6c:	83 ec 14             	sub    $0x14,%esp
 8048a6f:	50                   	push   %eax
 8048a70:	ff d2                	call   *%edx
 8048a72:	83 c4 10             	add    $0x10,%esp
 8048a75:	c9                   	leave  
 8048a76:	e9 75 ff ff ff       	jmp    80489f0 <register_tm_clones>

08048a7b <main>:
 8048a7b:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 8048a7f:	83 e4 f0             	and    $0xfffffff0,%esp
 8048a82:	ff 71 fc             	pushl  -0x4(%ecx)
 8048a85:	55                   	push   %ebp
 8048a86:	89 e5                	mov    %esp,%ebp
 8048a88:	53                   	push   %ebx
 8048a89:	51                   	push   %ecx
 8048a8a:	8b 01                	mov    (%ecx),%eax
 8048a8c:	8b 59 04             	mov    0x4(%ecx),%ebx
 8048a8f:	83 f8 01             	cmp    $0x1,%eax
 8048a92:	75 0c                	jne    8048aa0 <main+0x25>
 8048a94:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 8048a99:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 8048a9e:	eb 5b                	jmp    8048afb <main+0x80>
 8048aa0:	83 f8 02             	cmp    $0x2,%eax
 8048aa3:	75 39                	jne    8048ade <main+0x63>
 8048aa5:	83 ec 08             	sub    $0x8,%esp
 8048aa8:	68 88 a1 04 08       	push   $0x804a188
 8048aad:	ff 73 04             	pushl  0x4(%ebx)
 8048ab0:	e8 0b fe ff ff       	call   80488c0 <fopen@plt>
 8048ab5:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 8048aba:	83 c4 10             	add    $0x10,%esp
 8048abd:	85 c0                	test   %eax,%eax
 8048abf:	75 3a                	jne    8048afb <main+0x80>
 8048ac1:	ff 73 04             	pushl  0x4(%ebx)
 8048ac4:	ff 33                	pushl  (%ebx)
 8048ac6:	68 8a a1 04 08       	push   $0x804a18a
 8048acb:	6a 01                	push   $0x1
 8048acd:	e8 0e fe ff ff       	call   80488e0 <__printf_chk@plt>
 8048ad2:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048ad9:	e8 92 fd ff ff       	call   8048870 <exit@plt>
 8048ade:	83 ec 04             	sub    $0x4,%esp
 8048ae1:	ff 33                	pushl  (%ebx)
 8048ae3:	68 a7 a1 04 08       	push   $0x804a1a7
 8048ae8:	6a 01                	push   $0x1
 8048aea:	e8 f1 fd ff ff       	call   80488e0 <__printf_chk@plt>
 8048aef:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048af6:	e8 75 fd ff ff       	call   8048870 <exit@plt>
 8048afb:	e8 ae 06 00 00       	call   80491ae <initialize_bomb>
 8048b00:	83 ec 0c             	sub    $0xc,%esp
 8048b03:	68 18 a2 04 08       	push   $0x804a218
 8048b08:	e8 43 fd ff ff       	call   8048850 <puts@plt>
 8048b0d:	c7 04 24 54 a2 04 08 	movl   $0x804a254,(%esp)
 8048b14:	e8 37 fd ff ff       	call   8048850 <puts@plt>
 8048b19:	e8 5d 09 00 00       	call   804947b <read_line>
 8048b1e:	89 04 24             	mov    %eax,(%esp)
 8048b21:	e8 07 01 00 00       	call   8048c2d <phase_1>
 8048b26:	e8 49 0a 00 00       	call   8049574 <phase_defused>
 8048b2b:	c7 04 24 80 a2 04 08 	movl   $0x804a280,(%esp)
 8048b32:	e8 19 fd ff ff       	call   8048850 <puts@plt>
 8048b37:	e8 3f 09 00 00       	call   804947b <read_line>
 8048b3c:	89 04 24             	mov    %eax,(%esp)
 8048b3f:	e8 45 01 00 00       	call   8048c89 <phase_2>
 8048b44:	e8 2b 0a 00 00       	call   8049574 <phase_defused>
 8048b49:	c7 04 24 c1 a1 04 08 	movl   $0x804a1c1,(%esp)
 8048b50:	e8 fb fc ff ff       	call   8048850 <puts@plt>
 8048b55:	e8 21 09 00 00       	call   804947b <read_line>
 8048b5a:	89 04 24             	mov    %eax,(%esp)
 8048b5d:	e8 48 01 00 00       	call   8048caa <phase_3>
 8048b62:	e8 0d 0a 00 00       	call   8049574 <phase_defused>
 8048b67:	c7 04 24 df a1 04 08 	movl   $0x804a1df,(%esp)
 8048b6e:	e8 dd fc ff ff       	call   8048850 <puts@plt>
 8048b73:	e8 03 09 00 00       	call   804947b <read_line>
 8048b78:	89 04 24             	mov    %eax,(%esp)
 8048b7b:	e8 a5 01 00 00       	call   8048d25 <phase_4>
 8048b80:	e8 ef 09 00 00       	call   8049574 <phase_defused>
 8048b85:	c7 04 24 ac a2 04 08 	movl   $0x804a2ac,(%esp)
 8048b8c:	e8 bf fc ff ff       	call   8048850 <puts@plt>
 8048b91:	e8 e5 08 00 00       	call   804947b <read_line>
 8048b96:	89 04 24             	mov    %eax,(%esp)
 8048b99:	e8 f2 01 00 00       	call   8048d90 <phase_5>
 8048b9e:	e8 d1 09 00 00       	call   8049574 <phase_defused>
 8048ba3:	c7 04 24 f0 a1 04 08 	movl   $0x804a1f0,(%esp)
 8048baa:	e8 a1 fc ff ff       	call   8048850 <puts@plt>
 8048baf:	e8 c7 08 00 00       	call   804947b <read_line>
 8048bb4:	89 04 24             	mov    %eax,(%esp)
 8048bb7:	e8 c0 02 00 00       	call   8048e7c <phase_6>
 8048bbc:	e8 b3 09 00 00       	call   8049574 <phase_defused>
 8048bc1:	c7 04 24 d0 a2 04 08 	movl   $0x804a2d0,(%esp)
 8048bc8:	e8 83 fc ff ff       	call   8048850 <puts@plt>
 8048bcd:	e8 a9 08 00 00       	call   804947b <read_line>
 8048bd2:	89 04 24             	mov    %eax,(%esp)
 8048bd5:	e8 14 03 00 00       	call   8048eee <phase_7>
 8048bda:	e8 95 09 00 00       	call   8049574 <phase_defused>
 8048bdf:	c7 04 24 f0 a2 04 08 	movl   $0x804a2f0,(%esp)
 8048be6:	e8 65 fc ff ff       	call   8048850 <puts@plt>
 8048beb:	e8 8b 08 00 00       	call   804947b <read_line>
 8048bf0:	89 04 24             	mov    %eax,(%esp)
 8048bf3:	e8 3e 03 00 00       	call   8048f36 <phase_8>
 8048bf8:	e8 77 09 00 00       	call   8049574 <phase_defused>
 8048bfd:	c7 04 24 0e a2 04 08 	movl   $0x804a20e,(%esp)
 8048c04:	e8 47 fc ff ff       	call   8048850 <puts@plt>
 8048c09:	e8 6d 08 00 00       	call   804947b <read_line>
 8048c0e:	89 04 24             	mov    %eax,(%esp)
 8048c11:	e8 57 04 00 00       	call   804906d <phase_9>
 8048c16:	e8 59 09 00 00       	call   8049574 <phase_defused>
 8048c1b:	83 c4 10             	add    $0x10,%esp
 8048c1e:	b8 00 00 00 00       	mov    $0x0,%eax
 8048c23:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8048c26:	59                   	pop    %ecx
 8048c27:	5b                   	pop    %ebx
 8048c28:	5d                   	pop    %ebp
 8048c29:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048c2c:	c3                   	ret    

08048c2d <phase_1>:
 8048c2d:	83 ec 20             	sub    $0x20,%esp
 8048c30:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048c36:	89 44 24 10          	mov    %eax,0x10(%esp)
 8048c3a:	31 c0                	xor    %eax,%eax
 8048c3c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8048c43:	00 
 8048c44:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048c48:	50                   	push   %eax
 8048c49:	68 c4 a5 04 08       	push   $0x804a5c4
 8048c4e:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048c52:	e8 59 fc ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048c57:	83 c4 10             	add    $0x10,%esp
 8048c5a:	83 f8 01             	cmp    $0x1,%eax
 8048c5d:	74 05                	je     8048c64 <phase_1+0x37>
 8048c5f:	e8 9f 07 00 00       	call   8049403 <explode_bomb>
 8048c64:	81 7c 24 08 1c 02 00 	cmpl   $0x21c,0x8(%esp)
 8048c6b:	00 
 8048c6c:	74 05                	je     8048c73 <phase_1+0x46>
 8048c6e:	e8 90 07 00 00       	call   8049403 <explode_bomb>
 8048c73:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048c77:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048c7e:	74 05                	je     8048c85 <phase_1+0x58>
 8048c80:	e8 7b fb ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048c85:	83 c4 1c             	add    $0x1c,%esp
 8048c88:	c3                   	ret    

08048c89 <phase_2>:
 8048c89:	83 ec 14             	sub    $0x14,%esp
 8048c8c:	68 10 a3 04 08       	push   $0x804a310
 8048c91:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048c95:	e8 af 04 00 00       	call   8049149 <strings_not_equal>
 8048c9a:	83 c4 10             	add    $0x10,%esp
 8048c9d:	85 c0                	test   %eax,%eax
 8048c9f:	74 05                	je     8048ca6 <phase_2+0x1d>
 8048ca1:	e8 5d 07 00 00       	call   8049403 <explode_bomb>
 8048ca6:	83 c4 0c             	add    $0xc,%esp
 8048ca9:	c3                   	ret    

08048caa <phase_3>:
 8048caa:	83 ec 18             	sub    $0x18,%esp
 8048cad:	68 40 a3 04 08       	push   $0x804a340
 8048cb2:	e8 73 04 00 00       	call   804912a <string_length>
 8048cb7:	83 c0 01             	add    $0x1,%eax
 8048cba:	89 04 24             	mov    %eax,(%esp)
 8048cbd:	e8 7e fb ff ff       	call   8048840 <malloc@plt>
 8048cc2:	c7 00 59 6f 20 68    	movl   $0x68206f59,(%eax)
 8048cc8:	c7 40 04 6f 20 79 6f 	movl   $0x6f79206f,0x4(%eax)
 8048ccf:	c7 40 08 20 68 6f 2c 	movl   $0x2c6f6820,0x8(%eax)
 8048cd6:	c7 40 0c 20 61 20 70 	movl   $0x70206120,0xc(%eax)
 8048cdd:	c7 40 10 69 72 61 74 	movl   $0x74617269,0x10(%eax)
 8048ce4:	c7 40 14 65 27 73 20 	movl   $0x20732765,0x14(%eax)
 8048ceb:	c7 40 18 6c 69 66 65 	movl   $0x6566696c,0x18(%eax)
 8048cf2:	c7 40 1c 20 66 6f 72 	movl   $0x726f6620,0x1c(%eax)
 8048cf9:	c7 40 20 20 6d 65 2e 	movl   $0x2e656d20,0x20(%eax)
 8048d00:	c6 40 24 00          	movb   $0x0,0x24(%eax)
 8048d04:	c6 40 13 31          	movb   $0x31,0x13(%eax)
 8048d08:	83 c4 08             	add    $0x8,%esp
 8048d0b:	50                   	push   %eax
 8048d0c:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048d10:	e8 34 04 00 00       	call   8049149 <strings_not_equal>
 8048d15:	83 c4 10             	add    $0x10,%esp
 8048d18:	85 c0                	test   %eax,%eax
 8048d1a:	74 05                	je     8048d21 <phase_3+0x77>
 8048d1c:	e8 e2 06 00 00       	call   8049403 <explode_bomb>
 8048d21:	83 c4 0c             	add    $0xc,%esp
 8048d24:	c3                   	ret    

08048d25 <phase_4>:
 8048d25:	56                   	push   %esi
 8048d26:	53                   	push   %ebx
 8048d27:	83 ec 2c             	sub    $0x2c,%esp
 8048d2a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048d30:	89 44 24 24          	mov    %eax,0x24(%esp)
 8048d34:	31 c0                	xor    %eax,%eax
 8048d36:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048d3a:	50                   	push   %eax
 8048d3b:	ff 74 24 3c          	pushl  0x3c(%esp)
 8048d3f:	e8 fc 06 00 00       	call   8049440 <read_six_numbers>
 8048d44:	83 c4 10             	add    $0x10,%esp
 8048d47:	83 7c 24 04 01       	cmpl   $0x1,0x4(%esp)
 8048d4c:	75 07                	jne    8048d55 <phase_4+0x30>
 8048d4e:	83 7c 24 08 03       	cmpl   $0x3,0x8(%esp)
 8048d53:	74 05                	je     8048d5a <phase_4+0x35>
 8048d55:	e8 a9 06 00 00       	call   8049403 <explode_bomb>
 8048d5a:	8d 5c 24 04          	lea    0x4(%esp),%ebx
 8048d5e:	8d 74 24 14          	lea    0x14(%esp),%esi
 8048d62:	8b 43 04             	mov    0x4(%ebx),%eax
 8048d65:	03 03                	add    (%ebx),%eax
 8048d67:	39 43 08             	cmp    %eax,0x8(%ebx)
 8048d6a:	74 05                	je     8048d71 <phase_4+0x4c>
 8048d6c:	e8 92 06 00 00       	call   8049403 <explode_bomb>
 8048d71:	83 c3 04             	add    $0x4,%ebx
 8048d74:	39 f3                	cmp    %esi,%ebx
 8048d76:	75 ea                	jne    8048d62 <phase_4+0x3d>
 8048d78:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048d7c:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048d83:	74 05                	je     8048d8a <phase_4+0x65>
 8048d85:	e8 76 fa ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048d8a:	83 c4 24             	add    $0x24,%esp
 8048d8d:	5b                   	pop    %ebx
 8048d8e:	5e                   	pop    %esi
 8048d8f:	c3                   	ret    

08048d90 <phase_5>:
 8048d90:	83 ec 1c             	sub    $0x1c,%esp
 8048d93:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048d99:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048d9d:	31 c0                	xor    %eax,%eax
 8048d9f:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048da3:	50                   	push   %eax
 8048da4:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048da8:	50                   	push   %eax
 8048da9:	68 c1 a5 04 08       	push   $0x804a5c1
 8048dae:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048db2:	e8 f9 fa ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048db7:	83 c4 10             	add    $0x10,%esp
 8048dba:	83 f8 01             	cmp    $0x1,%eax
 8048dbd:	7f 05                	jg     8048dc4 <phase_5+0x34>
 8048dbf:	e8 3f 06 00 00       	call   8049403 <explode_bomb>
 8048dc4:	83 7c 24 04 07       	cmpl   $0x7,0x4(%esp)
 8048dc9:	77 3c                	ja     8048e07 <phase_5+0x77>
 8048dcb:	8b 44 24 04          	mov    0x4(%esp),%eax
 8048dcf:	ff 24 85 80 a3 04 08 	jmp    *0x804a380(,%eax,4)
 8048dd6:	b8 b5 02 00 00       	mov    $0x2b5,%eax
 8048ddb:	eb 3b                	jmp    8048e18 <phase_5+0x88>
 8048ddd:	b8 4a 00 00 00       	mov    $0x4a,%eax
 8048de2:	eb 34                	jmp    8048e18 <phase_5+0x88>
 8048de4:	b8 d0 03 00 00       	mov    $0x3d0,%eax
 8048de9:	eb 2d                	jmp    8048e18 <phase_5+0x88>
 8048deb:	b8 28 01 00 00       	mov    $0x128,%eax
 8048df0:	eb 26                	jmp    8048e18 <phase_5+0x88>
 8048df2:	b8 a3 03 00 00       	mov    $0x3a3,%eax
 8048df7:	eb 1f                	jmp    8048e18 <phase_5+0x88>
 8048df9:	b8 8b 00 00 00       	mov    $0x8b,%eax
 8048dfe:	eb 18                	jmp    8048e18 <phase_5+0x88>
 8048e00:	b8 17 02 00 00       	mov    $0x217,%eax
 8048e05:	eb 11                	jmp    8048e18 <phase_5+0x88>
 8048e07:	e8 f7 05 00 00       	call   8049403 <explode_bomb>
 8048e0c:	b8 00 00 00 00       	mov    $0x0,%eax
 8048e11:	eb 05                	jmp    8048e18 <phase_5+0x88>
 8048e13:	b8 57 03 00 00       	mov    $0x357,%eax
 8048e18:	3b 44 24 08          	cmp    0x8(%esp),%eax
 8048e1c:	74 05                	je     8048e23 <phase_5+0x93>
 8048e1e:	e8 e0 05 00 00       	call   8049403 <explode_bomb>
 8048e23:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048e27:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048e2e:	74 05                	je     8048e35 <phase_5+0xa5>
 8048e30:	e8 cb f9 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048e35:	83 c4 1c             	add    $0x1c,%esp
 8048e38:	c3                   	ret    

08048e39 <func6>:
 8048e39:	57                   	push   %edi
 8048e3a:	56                   	push   %esi
 8048e3b:	53                   	push   %ebx
 8048e3c:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8048e40:	8b 7c 24 14          	mov    0x14(%esp),%edi
 8048e44:	85 db                	test   %ebx,%ebx
 8048e46:	7e 2b                	jle    8048e73 <func6+0x3a>
 8048e48:	89 f8                	mov    %edi,%eax
 8048e4a:	83 fb 01             	cmp    $0x1,%ebx
 8048e4d:	74 29                	je     8048e78 <func6+0x3f>
 8048e4f:	83 ec 08             	sub    $0x8,%esp
 8048e52:	57                   	push   %edi
 8048e53:	8d 43 ff             	lea    -0x1(%ebx),%eax
 8048e56:	50                   	push   %eax
 8048e57:	e8 dd ff ff ff       	call   8048e39 <func6>
 8048e5c:	83 c4 08             	add    $0x8,%esp
 8048e5f:	8d 34 07             	lea    (%edi,%eax,1),%esi
 8048e62:	57                   	push   %edi
 8048e63:	83 eb 02             	sub    $0x2,%ebx
 8048e66:	53                   	push   %ebx
 8048e67:	e8 cd ff ff ff       	call   8048e39 <func6>
 8048e6c:	83 c4 10             	add    $0x10,%esp
 8048e6f:	01 f0                	add    %esi,%eax
 8048e71:	eb 05                	jmp    8048e78 <func6+0x3f>
 8048e73:	b8 00 00 00 00       	mov    $0x0,%eax
 8048e78:	5b                   	pop    %ebx
 8048e79:	5e                   	pop    %esi
 8048e7a:	5f                   	pop    %edi
 8048e7b:	c3                   	ret    

08048e7c <phase_6>:
 8048e7c:	83 ec 1c             	sub    $0x1c,%esp
 8048e7f:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048e85:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048e89:	31 c0                	xor    %eax,%eax
 8048e8b:	8d 44 24 04          	lea    0x4(%esp),%eax
 8048e8f:	50                   	push   %eax
 8048e90:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048e94:	50                   	push   %eax
 8048e95:	68 c1 a5 04 08       	push   $0x804a5c1
 8048e9a:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048e9e:	e8 0d fa ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048ea3:	83 c4 10             	add    $0x10,%esp
 8048ea6:	83 f8 02             	cmp    $0x2,%eax
 8048ea9:	75 0c                	jne    8048eb7 <phase_6+0x3b>
 8048eab:	8b 44 24 04          	mov    0x4(%esp),%eax
 8048eaf:	83 e8 02             	sub    $0x2,%eax
 8048eb2:	83 f8 02             	cmp    $0x2,%eax
 8048eb5:	76 05                	jbe    8048ebc <phase_6+0x40>
 8048eb7:	e8 47 05 00 00       	call   8049403 <explode_bomb>
 8048ebc:	83 ec 08             	sub    $0x8,%esp
 8048ebf:	ff 74 24 0c          	pushl  0xc(%esp)
 8048ec3:	6a 05                	push   $0x5
 8048ec5:	e8 6f ff ff ff       	call   8048e39 <func6>
 8048eca:	83 c4 10             	add    $0x10,%esp
 8048ecd:	3b 44 24 08          	cmp    0x8(%esp),%eax
 8048ed1:	74 05                	je     8048ed8 <phase_6+0x5c>
 8048ed3:	e8 2b 05 00 00       	call   8049403 <explode_bomb>
 8048ed8:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048edc:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048ee3:	74 05                	je     8048eea <phase_6+0x6e>
 8048ee5:	e8 16 f9 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048eea:	83 c4 1c             	add    $0x1c,%esp
 8048eed:	c3                   	ret    

08048eee <phase_7>:
 8048eee:	53                   	push   %ebx
 8048eef:	83 ec 14             	sub    $0x14,%esp
 8048ef2:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 8048ef6:	53                   	push   %ebx
 8048ef7:	e8 2e 02 00 00       	call   804912a <string_length>
 8048efc:	83 c4 10             	add    $0x10,%esp
 8048eff:	83 f8 06             	cmp    $0x6,%eax
 8048f02:	74 05                	je     8048f09 <phase_7+0x1b>
 8048f04:	e8 fa 04 00 00       	call   8049403 <explode_bomb>
 8048f09:	89 d8                	mov    %ebx,%eax
 8048f0b:	83 c3 06             	add    $0x6,%ebx
 8048f0e:	b9 00 00 00 00       	mov    $0x0,%ecx
 8048f13:	0f b6 10             	movzbl (%eax),%edx
 8048f16:	83 e2 0f             	and    $0xf,%edx
 8048f19:	03 0c 95 a0 a3 04 08 	add    0x804a3a0(,%edx,4),%ecx
 8048f20:	83 c0 01             	add    $0x1,%eax
 8048f23:	39 d8                	cmp    %ebx,%eax
 8048f25:	75 ec                	jne    8048f13 <phase_7+0x25>
 8048f27:	83 f9 2d             	cmp    $0x2d,%ecx
 8048f2a:	74 05                	je     8048f31 <phase_7+0x43>
 8048f2c:	e8 d2 04 00 00       	call   8049403 <explode_bomb>
 8048f31:	83 c4 08             	add    $0x8,%esp
 8048f34:	5b                   	pop    %ebx
 8048f35:	c3                   	ret    

08048f36 <phase_8>:
 8048f36:	56                   	push   %esi
 8048f37:	53                   	push   %ebx
 8048f38:	83 ec 4c             	sub    $0x4c,%esp
 8048f3b:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048f41:	89 44 24 44          	mov    %eax,0x44(%esp)
 8048f45:	31 c0                	xor    %eax,%eax
 8048f47:	8d 44 24 14          	lea    0x14(%esp),%eax
 8048f4b:	50                   	push   %eax
 8048f4c:	ff 74 24 5c          	pushl  0x5c(%esp)
 8048f50:	e8 eb 04 00 00       	call   8049440 <read_six_numbers>
 8048f55:	83 c4 10             	add    $0x10,%esp
 8048f58:	be 00 00 00 00       	mov    $0x0,%esi
 8048f5d:	8b 44 b4 0c          	mov    0xc(%esp,%esi,4),%eax
 8048f61:	83 e8 01             	sub    $0x1,%eax
 8048f64:	83 f8 05             	cmp    $0x5,%eax
 8048f67:	76 05                	jbe    8048f6e <phase_8+0x38>
 8048f69:	e8 95 04 00 00       	call   8049403 <explode_bomb>
 8048f6e:	83 c6 01             	add    $0x1,%esi
 8048f71:	83 fe 06             	cmp    $0x6,%esi
 8048f74:	74 33                	je     8048fa9 <phase_8+0x73>
 8048f76:	89 f3                	mov    %esi,%ebx
 8048f78:	8b 44 9c 0c          	mov    0xc(%esp,%ebx,4),%eax
 8048f7c:	39 44 b4 08          	cmp    %eax,0x8(%esp,%esi,4)
 8048f80:	75 05                	jne    8048f87 <phase_8+0x51>
 8048f82:	e8 7c 04 00 00       	call   8049403 <explode_bomb>
 8048f87:	83 c3 01             	add    $0x1,%ebx
 8048f8a:	83 fb 05             	cmp    $0x5,%ebx
 8048f8d:	7e e9                	jle    8048f78 <phase_8+0x42>
 8048f8f:	eb cc                	jmp    8048f5d <phase_8+0x27>
 8048f91:	8b 52 08             	mov    0x8(%edx),%edx
 8048f94:	83 c0 01             	add    $0x1,%eax
 8048f97:	39 c8                	cmp    %ecx,%eax
 8048f99:	75 f6                	jne    8048f91 <phase_8+0x5b>
 8048f9b:	89 54 b4 24          	mov    %edx,0x24(%esp,%esi,4)
 8048f9f:	83 c3 01             	add    $0x1,%ebx
 8048fa2:	83 fb 06             	cmp    $0x6,%ebx
 8048fa5:	75 07                	jne    8048fae <phase_8+0x78>
 8048fa7:	eb 1c                	jmp    8048fc5 <phase_8+0x8f>
 8048fa9:	bb 00 00 00 00       	mov    $0x0,%ebx
 8048fae:	89 de                	mov    %ebx,%esi
 8048fb0:	8b 4c 9c 0c          	mov    0xc(%esp,%ebx,4),%ecx
 8048fb4:	b8 01 00 00 00       	mov    $0x1,%eax
 8048fb9:	ba 54 d1 04 08       	mov    $0x804d154,%edx
 8048fbe:	83 f9 01             	cmp    $0x1,%ecx
 8048fc1:	7f ce                	jg     8048f91 <phase_8+0x5b>
 8048fc3:	eb d6                	jmp    8048f9b <phase_8+0x65>
 8048fc5:	8b 5c 24 24          	mov    0x24(%esp),%ebx
 8048fc9:	8d 44 24 24          	lea    0x24(%esp),%eax
 8048fcd:	8d 74 24 38          	lea    0x38(%esp),%esi
 8048fd1:	89 d9                	mov    %ebx,%ecx
 8048fd3:	8b 50 04             	mov    0x4(%eax),%edx
 8048fd6:	89 51 08             	mov    %edx,0x8(%ecx)
 8048fd9:	83 c0 04             	add    $0x4,%eax
 8048fdc:	89 d1                	mov    %edx,%ecx
 8048fde:	39 f0                	cmp    %esi,%eax
 8048fe0:	75 f1                	jne    8048fd3 <phase_8+0x9d>
 8048fe2:	c7 42 08 00 00 00 00 	movl   $0x0,0x8(%edx)
 8048fe9:	be 05 00 00 00       	mov    $0x5,%esi
 8048fee:	8b 43 08             	mov    0x8(%ebx),%eax
 8048ff1:	8b 00                	mov    (%eax),%eax
 8048ff3:	39 03                	cmp    %eax,(%ebx)
 8048ff5:	7e 05                	jle    8048ffc <phase_8+0xc6>
 8048ff7:	e8 07 04 00 00       	call   8049403 <explode_bomb>
 8048ffc:	8b 5b 08             	mov    0x8(%ebx),%ebx
 8048fff:	83 ee 01             	sub    $0x1,%esi
 8049002:	75 ea                	jne    8048fee <phase_8+0xb8>
 8049004:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8049008:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 804900f:	74 05                	je     8049016 <phase_8+0xe0>
 8049011:	e8 ea f7 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049016:	83 c4 44             	add    $0x44,%esp
 8049019:	5b                   	pop    %ebx
 804901a:	5e                   	pop    %esi
 804901b:	c3                   	ret    

0804901c <fun9>:
 804901c:	53                   	push   %ebx
 804901d:	83 ec 08             	sub    $0x8,%esp
 8049020:	8b 54 24 10          	mov    0x10(%esp),%edx
 8049024:	8b 4c 24 14          	mov    0x14(%esp),%ecx
 8049028:	85 d2                	test   %edx,%edx
 804902a:	74 37                	je     8049063 <fun9+0x47>
 804902c:	8b 1a                	mov    (%edx),%ebx
 804902e:	39 cb                	cmp    %ecx,%ebx
 8049030:	7e 13                	jle    8049045 <fun9+0x29>
 8049032:	83 ec 08             	sub    $0x8,%esp
 8049035:	51                   	push   %ecx
 8049036:	ff 72 04             	pushl  0x4(%edx)
 8049039:	e8 de ff ff ff       	call   804901c <fun9>
 804903e:	83 c4 10             	add    $0x10,%esp
 8049041:	01 c0                	add    %eax,%eax
 8049043:	eb 23                	jmp    8049068 <fun9+0x4c>
 8049045:	b8 00 00 00 00       	mov    $0x0,%eax
 804904a:	39 cb                	cmp    %ecx,%ebx
 804904c:	74 1a                	je     8049068 <fun9+0x4c>
 804904e:	83 ec 08             	sub    $0x8,%esp
 8049051:	51                   	push   %ecx
 8049052:	ff 72 08             	pushl  0x8(%edx)
 8049055:	e8 c2 ff ff ff       	call   804901c <fun9>
 804905a:	83 c4 10             	add    $0x10,%esp
 804905d:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax
 8049061:	eb 05                	jmp    8049068 <fun9+0x4c>
 8049063:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049068:	83 c4 08             	add    $0x8,%esp
 804906b:	5b                   	pop    %ebx
 804906c:	c3                   	ret    

0804906d <phase_9>:
 804906d:	53                   	push   %ebx
 804906e:	83 ec 0c             	sub    $0xc,%esp
 8049071:	6a 0a                	push   $0xa
 8049073:	6a 00                	push   $0x0
 8049075:	ff 74 24 1c          	pushl  0x1c(%esp)
 8049079:	e8 a2 f8 ff ff       	call   8048920 <strtol@plt>
 804907e:	89 c3                	mov    %eax,%ebx
 8049080:	8d 40 ff             	lea    -0x1(%eax),%eax
 8049083:	83 c4 10             	add    $0x10,%esp
 8049086:	3d ec 03 00 00       	cmp    $0x3ec,%eax
 804908b:	76 05                	jbe    8049092 <phase_9+0x25>
 804908d:	e8 71 03 00 00       	call   8049403 <explode_bomb>
 8049092:	83 ec 08             	sub    $0x8,%esp
 8049095:	53                   	push   %ebx
 8049096:	68 a0 d0 04 08       	push   $0x804d0a0
 804909b:	e8 7c ff ff ff       	call   804901c <fun9>
 80490a0:	83 c4 10             	add    $0x10,%esp
 80490a3:	85 c0                	test   %eax,%eax
 80490a5:	74 05                	je     80490ac <phase_9+0x3f>
 80490a7:	e8 57 03 00 00       	call   8049403 <explode_bomb>
 80490ac:	83 c4 08             	add    $0x8,%esp
 80490af:	5b                   	pop    %ebx
 80490b0:	c3                   	ret    

080490b1 <sig_handler>:
 80490b1:	83 ec 18             	sub    $0x18,%esp
 80490b4:	68 e0 a3 04 08       	push   $0x804a3e0
 80490b9:	e8 92 f7 ff ff       	call   8048850 <puts@plt>
 80490be:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 80490c5:	e8 16 f7 ff ff       	call   80487e0 <sleep@plt>
 80490ca:	83 c4 08             	add    $0x8,%esp
 80490cd:	68 3d a5 04 08       	push   $0x804a53d
 80490d2:	6a 01                	push   $0x1
 80490d4:	e8 07 f8 ff ff       	call   80488e0 <__printf_chk@plt>
 80490d9:	83 c4 04             	add    $0x4,%esp
 80490dc:	ff 35 e4 d7 04 08    	pushl  0x804d7e4
 80490e2:	e8 c9 f6 ff ff       	call   80487b0 <fflush@plt>
 80490e7:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80490ee:	e8 ed f6 ff ff       	call   80487e0 <sleep@plt>
 80490f3:	c7 04 24 45 a5 04 08 	movl   $0x804a545,(%esp)
 80490fa:	e8 51 f7 ff ff       	call   8048850 <puts@plt>
 80490ff:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
 8049106:	e8 65 f7 ff ff       	call   8048870 <exit@plt>

0804910b <invalid_phase>:
 804910b:	83 ec 10             	sub    $0x10,%esp
 804910e:	ff 74 24 14          	pushl  0x14(%esp)
 8049112:	68 4d a5 04 08       	push   $0x804a54d
 8049117:	6a 01                	push   $0x1
 8049119:	e8 c2 f7 ff ff       	call   80488e0 <__printf_chk@plt>
 804911e:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049125:	e8 46 f7 ff ff       	call   8048870 <exit@plt>

0804912a <string_length>:
 804912a:	8b 54 24 04          	mov    0x4(%esp),%edx
 804912e:	80 3a 00             	cmpb   $0x0,(%edx)
 8049131:	74 10                	je     8049143 <string_length+0x19>
 8049133:	b8 00 00 00 00       	mov    $0x0,%eax
 8049138:	83 c0 01             	add    $0x1,%eax
 804913b:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
 804913f:	75 f7                	jne    8049138 <string_length+0xe>
 8049141:	f3 c3                	repz ret 
 8049143:	b8 00 00 00 00       	mov    $0x0,%eax
 8049148:	c3                   	ret    

08049149 <strings_not_equal>:
 8049149:	57                   	push   %edi
 804914a:	56                   	push   %esi
 804914b:	53                   	push   %ebx
 804914c:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8049150:	8b 74 24 14          	mov    0x14(%esp),%esi
 8049154:	53                   	push   %ebx
 8049155:	e8 d0 ff ff ff       	call   804912a <string_length>
 804915a:	89 c7                	mov    %eax,%edi
 804915c:	89 34 24             	mov    %esi,(%esp)
 804915f:	e8 c6 ff ff ff       	call   804912a <string_length>
 8049164:	83 c4 04             	add    $0x4,%esp
 8049167:	ba 01 00 00 00       	mov    $0x1,%edx
 804916c:	39 c7                	cmp    %eax,%edi
 804916e:	75 38                	jne    80491a8 <strings_not_equal+0x5f>
 8049170:	0f b6 03             	movzbl (%ebx),%eax
 8049173:	84 c0                	test   %al,%al
 8049175:	74 1e                	je     8049195 <strings_not_equal+0x4c>
 8049177:	3a 06                	cmp    (%esi),%al
 8049179:	74 06                	je     8049181 <strings_not_equal+0x38>
 804917b:	eb 1f                	jmp    804919c <strings_not_equal+0x53>
 804917d:	3a 06                	cmp    (%esi),%al
 804917f:	75 22                	jne    80491a3 <strings_not_equal+0x5a>
 8049181:	83 c3 01             	add    $0x1,%ebx
 8049184:	83 c6 01             	add    $0x1,%esi
 8049187:	0f b6 03             	movzbl (%ebx),%eax
 804918a:	84 c0                	test   %al,%al
 804918c:	75 ef                	jne    804917d <strings_not_equal+0x34>
 804918e:	ba 00 00 00 00       	mov    $0x0,%edx
 8049193:	eb 13                	jmp    80491a8 <strings_not_equal+0x5f>
 8049195:	ba 00 00 00 00       	mov    $0x0,%edx
 804919a:	eb 0c                	jmp    80491a8 <strings_not_equal+0x5f>
 804919c:	ba 01 00 00 00       	mov    $0x1,%edx
 80491a1:	eb 05                	jmp    80491a8 <strings_not_equal+0x5f>
 80491a3:	ba 01 00 00 00       	mov    $0x1,%edx
 80491a8:	89 d0                	mov    %edx,%eax
 80491aa:	5b                   	pop    %ebx
 80491ab:	5e                   	pop    %esi
 80491ac:	5f                   	pop    %edi
 80491ad:	c3                   	ret    

080491ae <initialize_bomb>:
 80491ae:	56                   	push   %esi
 80491af:	53                   	push   %ebx
 80491b0:	81 ec 5c 20 00 00    	sub    $0x205c,%esp
 80491b6:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80491bc:	89 84 24 54 20 00 00 	mov    %eax,0x2054(%esp)
 80491c3:	31 c0                	xor    %eax,%eax
 80491c5:	68 b1 90 04 08       	push   $0x80490b1
 80491ca:	6a 02                	push   $0x2
 80491cc:	e8 ff f5 ff ff       	call   80487d0 <signal@plt>
 80491d1:	83 c4 08             	add    $0x8,%esp
 80491d4:	6a 40                	push   $0x40
 80491d6:	8d 44 24 18          	lea    0x18(%esp),%eax
 80491da:	50                   	push   %eax
 80491db:	e8 40 f6 ff ff       	call   8048820 <gethostname@plt>
 80491e0:	83 c4 10             	add    $0x10,%esp
 80491e3:	85 c0                	test   %eax,%eax
 80491e5:	75 14                	jne    80491fb <initialize_bomb+0x4d>
 80491e7:	a1 c0 d5 04 08       	mov    0x804d5c0,%eax
 80491ec:	bb c4 d5 04 08       	mov    $0x804d5c4,%ebx
 80491f1:	8d 74 24 0c          	lea    0xc(%esp),%esi
 80491f5:	85 c0                	test   %eax,%eax
 80491f7:	75 1b                	jne    8049214 <initialize_bomb+0x66>
 80491f9:	eb 56                	jmp    8049251 <initialize_bomb+0xa3>
 80491fb:	83 ec 0c             	sub    $0xc,%esp
 80491fe:	68 18 a4 04 08       	push   $0x804a418
 8049203:	e8 48 f6 ff ff       	call   8048850 <puts@plt>
 8049208:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804920f:	e8 5c f6 ff ff       	call   8048870 <exit@plt>
 8049214:	83 ec 08             	sub    $0x8,%esp
 8049217:	56                   	push   %esi
 8049218:	50                   	push   %eax
 8049219:	e8 82 f6 ff ff       	call   80488a0 <strcasecmp@plt>
 804921e:	83 c4 10             	add    $0x10,%esp
 8049221:	85 c0                	test   %eax,%eax
 8049223:	74 45                	je     804926a <initialize_bomb+0xbc>
 8049225:	83 c3 04             	add    $0x4,%ebx
 8049228:	8b 43 fc             	mov    -0x4(%ebx),%eax
 804922b:	85 c0                	test   %eax,%eax
 804922d:	75 e5                	jne    8049214 <initialize_bomb+0x66>
 804922f:	eb 20                	jmp    8049251 <initialize_bomb+0xa3>
 8049231:	83 ec 04             	sub    $0x4,%esp
 8049234:	8d 44 24 50          	lea    0x50(%esp),%eax
 8049238:	50                   	push   %eax
 8049239:	68 5e a5 04 08       	push   $0x804a55e
 804923e:	6a 01                	push   $0x1
 8049240:	e8 9b f6 ff ff       	call   80488e0 <__printf_chk@plt>
 8049245:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804924c:	e8 1f f6 ff ff       	call   8048870 <exit@plt>
 8049251:	83 ec 0c             	sub    $0xc,%esp
 8049254:	68 50 a4 04 08       	push   $0x804a450
 8049259:	e8 f2 f5 ff ff       	call   8048850 <puts@plt>
 804925e:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049265:	e8 06 f6 ff ff       	call   8048870 <exit@plt>
 804926a:	83 ec 0c             	sub    $0xc,%esp
 804926d:	8d 44 24 58          	lea    0x58(%esp),%eax
 8049271:	50                   	push   %eax
 8049272:	e8 29 0c 00 00       	call   8049ea0 <init_driver>
 8049277:	83 c4 10             	add    $0x10,%esp
 804927a:	85 c0                	test   %eax,%eax
 804927c:	78 b3                	js     8049231 <initialize_bomb+0x83>
 804927e:	8b 84 24 4c 20 00 00 	mov    0x204c(%esp),%eax
 8049285:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 804928c:	74 05                	je     8049293 <initialize_bomb+0xe5>
 804928e:	e8 6d f5 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049293:	81 c4 54 20 00 00    	add    $0x2054,%esp
 8049299:	5b                   	pop    %ebx
 804929a:	5e                   	pop    %esi
 804929b:	c3                   	ret    

0804929c <initialize_bomb_solve>:
 804929c:	f3 c3                	repz ret 

0804929e <blank_line>:
 804929e:	56                   	push   %esi
 804929f:	53                   	push   %ebx
 80492a0:	83 ec 04             	sub    $0x4,%esp
 80492a3:	8b 74 24 10          	mov    0x10(%esp),%esi
 80492a7:	eb 14                	jmp    80492bd <blank_line+0x1f>
 80492a9:	e8 a2 f6 ff ff       	call   8048950 <__ctype_b_loc@plt>
 80492ae:	83 c6 01             	add    $0x1,%esi
 80492b1:	0f be db             	movsbl %bl,%ebx
 80492b4:	8b 00                	mov    (%eax),%eax
 80492b6:	f6 44 58 01 20       	testb  $0x20,0x1(%eax,%ebx,2)
 80492bb:	74 0e                	je     80492cb <blank_line+0x2d>
 80492bd:	0f b6 1e             	movzbl (%esi),%ebx
 80492c0:	84 db                	test   %bl,%bl
 80492c2:	75 e5                	jne    80492a9 <blank_line+0xb>
 80492c4:	b8 01 00 00 00       	mov    $0x1,%eax
 80492c9:	eb 05                	jmp    80492d0 <blank_line+0x32>
 80492cb:	b8 00 00 00 00       	mov    $0x0,%eax
 80492d0:	83 c4 04             	add    $0x4,%esp
 80492d3:	5b                   	pop    %ebx
 80492d4:	5e                   	pop    %esi
 80492d5:	c3                   	ret    

080492d6 <skip>:
 80492d6:	53                   	push   %ebx
 80492d7:	83 ec 08             	sub    $0x8,%esp
 80492da:	83 ec 04             	sub    $0x4,%esp
 80492dd:	ff 35 f0 d7 04 08    	pushl  0x804d7f0
 80492e3:	6a 50                	push   $0x50
 80492e5:	a1 ec d7 04 08       	mov    0x804d7ec,%eax
 80492ea:	8d 04 80             	lea    (%eax,%eax,4),%eax
 80492ed:	c1 e0 04             	shl    $0x4,%eax
 80492f0:	05 00 d8 04 08       	add    $0x804d800,%eax
 80492f5:	50                   	push   %eax
 80492f6:	e8 c5 f4 ff ff       	call   80487c0 <fgets@plt>
 80492fb:	89 c3                	mov    %eax,%ebx
 80492fd:	83 c4 10             	add    $0x10,%esp
 8049300:	85 c0                	test   %eax,%eax
 8049302:	74 10                	je     8049314 <skip+0x3e>
 8049304:	83 ec 0c             	sub    $0xc,%esp
 8049307:	50                   	push   %eax
 8049308:	e8 91 ff ff ff       	call   804929e <blank_line>
 804930d:	83 c4 10             	add    $0x10,%esp
 8049310:	85 c0                	test   %eax,%eax
 8049312:	75 c6                	jne    80492da <skip+0x4>
 8049314:	89 d8                	mov    %ebx,%eax
 8049316:	83 c4 08             	add    $0x8,%esp
 8049319:	5b                   	pop    %ebx
 804931a:	c3                   	ret    

0804931b <send_msg>:
 804931b:	57                   	push   %edi
 804931c:	53                   	push   %ebx
 804931d:	81 ec 14 40 00 00    	sub    $0x4014,%esp
 8049323:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049329:	89 84 24 0c 40 00 00 	mov    %eax,0x400c(%esp)
 8049330:	31 c0                	xor    %eax,%eax
 8049332:	8b 1d ec d7 04 08    	mov    0x804d7ec,%ebx
 8049338:	8d 54 9b fb          	lea    -0x5(%ebx,%ebx,4),%edx
 804933c:	c1 e2 04             	shl    $0x4,%edx
 804933f:	81 c2 00 d8 04 08    	add    $0x804d800,%edx
 8049345:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 804934a:	89 d7                	mov    %edx,%edi
 804934c:	f2 ae                	repnz scas %es:(%edi),%al
 804934e:	f7 d1                	not    %ecx
 8049350:	83 c1 63             	add    $0x63,%ecx
 8049353:	81 f9 00 20 00 00    	cmp    $0x2000,%ecx
 8049359:	76 1b                	jbe    8049376 <send_msg+0x5b>
 804935b:	83 ec 08             	sub    $0x8,%esp
 804935e:	68 88 a4 04 08       	push   $0x804a488
 8049363:	6a 01                	push   $0x1
 8049365:	e8 76 f5 ff ff       	call   80488e0 <__printf_chk@plt>
 804936a:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049371:	e8 fa f4 ff ff       	call   8048870 <exit@plt>
 8049376:	83 bc 24 20 40 00 00 	cmpl   $0x0,0x4020(%esp)
 804937d:	00 
 804937e:	b9 80 a5 04 08       	mov    $0x804a580,%ecx
 8049383:	b8 78 a5 04 08       	mov    $0x804a578,%eax
 8049388:	0f 44 c1             	cmove  %ecx,%eax
 804938b:	52                   	push   %edx
 804938c:	53                   	push   %ebx
 804938d:	50                   	push   %eax
 804938e:	ff 35 a0 d5 04 08    	pushl  0x804d5a0
 8049394:	68 89 a5 04 08       	push   $0x804a589
 8049399:	68 00 20 00 00       	push   $0x2000
 804939e:	6a 01                	push   $0x1
 80493a0:	8d 5c 24 28          	lea    0x28(%esp),%ebx
 80493a4:	53                   	push   %ebx
 80493a5:	e8 b6 f5 ff ff       	call   8048960 <__sprintf_chk@plt>
 80493aa:	83 c4 20             	add    $0x20,%esp
 80493ad:	8d 84 24 0c 20 00 00 	lea    0x200c(%esp),%eax
 80493b4:	50                   	push   %eax
 80493b5:	6a 00                	push   $0x0
 80493b7:	53                   	push   %ebx
 80493b8:	68 a0 d1 04 08       	push   $0x804d1a0
 80493bd:	e8 b0 0c 00 00       	call   804a072 <driver_post>
 80493c2:	83 c4 10             	add    $0x10,%esp
 80493c5:	85 c0                	test   %eax,%eax
 80493c7:	79 1c                	jns    80493e5 <send_msg+0xca>
 80493c9:	83 ec 0c             	sub    $0xc,%esp
 80493cc:	8d 84 24 18 20 00 00 	lea    0x2018(%esp),%eax
 80493d3:	50                   	push   %eax
 80493d4:	e8 77 f4 ff ff       	call   8048850 <puts@plt>
 80493d9:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80493e0:	e8 8b f4 ff ff       	call   8048870 <exit@plt>
 80493e5:	8b 84 24 0c 40 00 00 	mov    0x400c(%esp),%eax
 80493ec:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 80493f3:	74 05                	je     80493fa <send_msg+0xdf>
 80493f5:	e8 06 f4 ff ff       	call   8048800 <__stack_chk_fail@plt>
 80493fa:	81 c4 14 40 00 00    	add    $0x4014,%esp
 8049400:	5b                   	pop    %ebx
 8049401:	5f                   	pop    %edi
 8049402:	c3                   	ret    

08049403 <explode_bomb>:
 8049403:	83 ec 18             	sub    $0x18,%esp
 8049406:	68 95 a5 04 08       	push   $0x804a595
 804940b:	e8 40 f4 ff ff       	call   8048850 <puts@plt>
 8049410:	c7 04 24 9e a5 04 08 	movl   $0x804a59e,(%esp)
 8049417:	e8 34 f4 ff ff       	call   8048850 <puts@plt>
 804941c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8049423:	e8 f3 fe ff ff       	call   804931b <send_msg>
 8049428:	c7 04 24 ac a4 04 08 	movl   $0x804a4ac,(%esp)
 804942f:	e8 1c f4 ff ff       	call   8048850 <puts@plt>
 8049434:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804943b:	e8 30 f4 ff ff       	call   8048870 <exit@plt>

08049440 <read_six_numbers>:
 8049440:	83 ec 0c             	sub    $0xc,%esp
 8049443:	8b 44 24 14          	mov    0x14(%esp),%eax
 8049447:	8d 50 14             	lea    0x14(%eax),%edx
 804944a:	52                   	push   %edx
 804944b:	8d 50 10             	lea    0x10(%eax),%edx
 804944e:	52                   	push   %edx
 804944f:	8d 50 0c             	lea    0xc(%eax),%edx
 8049452:	52                   	push   %edx
 8049453:	8d 50 08             	lea    0x8(%eax),%edx
 8049456:	52                   	push   %edx
 8049457:	8d 50 04             	lea    0x4(%eax),%edx
 804945a:	52                   	push   %edx
 804945b:	50                   	push   %eax
 804945c:	68 b5 a5 04 08       	push   $0x804a5b5
 8049461:	ff 74 24 2c          	pushl  0x2c(%esp)
 8049465:	e8 46 f4 ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 804946a:	83 c4 20             	add    $0x20,%esp
 804946d:	83 f8 05             	cmp    $0x5,%eax
 8049470:	7f 05                	jg     8049477 <read_six_numbers+0x37>
 8049472:	e8 8c ff ff ff       	call   8049403 <explode_bomb>
 8049477:	83 c4 0c             	add    $0xc,%esp
 804947a:	c3                   	ret    

0804947b <read_line>:
 804947b:	57                   	push   %edi
 804947c:	56                   	push   %esi
 804947d:	53                   	push   %ebx
 804947e:	e8 53 fe ff ff       	call   80492d6 <skip>
 8049483:	85 c0                	test   %eax,%eax
 8049485:	75 70                	jne    80494f7 <read_line+0x7c>
 8049487:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 804948c:	39 05 f0 d7 04 08    	cmp    %eax,0x804d7f0
 8049492:	75 19                	jne    80494ad <read_line+0x32>
 8049494:	83 ec 0c             	sub    $0xc,%esp
 8049497:	68 c7 a5 04 08       	push   $0x804a5c7
 804949c:	e8 af f3 ff ff       	call   8048850 <puts@plt>
 80494a1:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80494a8:	e8 c3 f3 ff ff       	call   8048870 <exit@plt>
 80494ad:	83 ec 0c             	sub    $0xc,%esp
 80494b0:	68 e5 a5 04 08       	push   $0x804a5e5
 80494b5:	e8 76 f3 ff ff       	call   8048830 <getenv@plt>
 80494ba:	83 c4 10             	add    $0x10,%esp
 80494bd:	85 c0                	test   %eax,%eax
 80494bf:	74 0a                	je     80494cb <read_line+0x50>
 80494c1:	83 ec 0c             	sub    $0xc,%esp
 80494c4:	6a 00                	push   $0x0
 80494c6:	e8 a5 f3 ff ff       	call   8048870 <exit@plt>
 80494cb:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 80494d0:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 80494d5:	e8 fc fd ff ff       	call   80492d6 <skip>
 80494da:	85 c0                	test   %eax,%eax
 80494dc:	75 19                	jne    80494f7 <read_line+0x7c>
 80494de:	83 ec 0c             	sub    $0xc,%esp
 80494e1:	68 c7 a5 04 08       	push   $0x804a5c7
 80494e6:	e8 65 f3 ff ff       	call   8048850 <puts@plt>
 80494eb:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80494f2:	e8 79 f3 ff ff       	call   8048870 <exit@plt>
 80494f7:	8b 15 ec d7 04 08    	mov    0x804d7ec,%edx
 80494fd:	8d 1c 92             	lea    (%edx,%edx,4),%ebx
 8049500:	c1 e3 04             	shl    $0x4,%ebx
 8049503:	81 c3 00 d8 04 08    	add    $0x804d800,%ebx
 8049509:	b8 00 00 00 00       	mov    $0x0,%eax
 804950e:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049513:	89 df                	mov    %ebx,%edi
 8049515:	f2 ae                	repnz scas %es:(%edi),%al
 8049517:	f7 d1                	not    %ecx
 8049519:	83 e9 01             	sub    $0x1,%ecx
 804951c:	83 f9 4e             	cmp    $0x4e,%ecx
 804951f:	7e 36                	jle    8049557 <read_line+0xdc>
 8049521:	83 ec 0c             	sub    $0xc,%esp
 8049524:	68 f0 a5 04 08       	push   $0x804a5f0
 8049529:	e8 22 f3 ff ff       	call   8048850 <puts@plt>
 804952e:	a1 ec d7 04 08       	mov    0x804d7ec,%eax
 8049533:	8d 50 01             	lea    0x1(%eax),%edx
 8049536:	89 15 ec d7 04 08    	mov    %edx,0x804d7ec
 804953c:	6b c0 50             	imul   $0x50,%eax,%eax
 804953f:	05 00 d8 04 08       	add    $0x804d800,%eax
 8049544:	be 0b a6 04 08       	mov    $0x804a60b,%esi
 8049549:	b9 04 00 00 00       	mov    $0x4,%ecx
 804954e:	89 c7                	mov    %eax,%edi
 8049550:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049552:	e8 ac fe ff ff       	call   8049403 <explode_bomb>
 8049557:	8d 04 92             	lea    (%edx,%edx,4),%eax
 804955a:	c1 e0 04             	shl    $0x4,%eax
 804955d:	c6 84 01 ff d7 04 08 	movb   $0x0,0x804d7ff(%ecx,%eax,1)
 8049564:	00 
 8049565:	83 c2 01             	add    $0x1,%edx
 8049568:	89 15 ec d7 04 08    	mov    %edx,0x804d7ec
 804956e:	89 d8                	mov    %ebx,%eax
 8049570:	5b                   	pop    %ebx
 8049571:	5e                   	pop    %esi
 8049572:	5f                   	pop    %edi
 8049573:	c3                   	ret    

08049574 <phase_defused>:
 8049574:	83 ec 18             	sub    $0x18,%esp
 8049577:	6a 01                	push   $0x1
 8049579:	e8 9d fd ff ff       	call   804931b <send_msg>
 804957e:	83 c4 10             	add    $0x10,%esp
 8049581:	83 3d ec d7 04 08 09 	cmpl   $0x9,0x804d7ec
 8049588:	75 1c                	jne    80495a6 <phase_defused+0x32>
 804958a:	83 ec 0c             	sub    $0xc,%esp
 804958d:	68 d0 a4 04 08       	push   $0x804a4d0
 8049592:	e8 b9 f2 ff ff       	call   8048850 <puts@plt>
 8049597:	c7 04 24 fc a4 04 08 	movl   $0x804a4fc,(%esp)
 804959e:	e8 ad f2 ff ff       	call   8048850 <puts@plt>
 80495a3:	83 c4 10             	add    $0x10,%esp
 80495a6:	83 c4 0c             	add    $0xc,%esp
 80495a9:	c3                   	ret    

080495aa <sigalrm_handler>:
 80495aa:	83 ec 0c             	sub    $0xc,%esp
 80495ad:	6a 00                	push   $0x0
 80495af:	68 04 aa 04 08       	push   $0x804aa04
 80495b4:	6a 01                	push   $0x1
 80495b6:	ff 35 c0 d7 04 08    	pushl  0x804d7c0
 80495bc:	e8 3f f3 ff ff       	call   8048900 <__fprintf_chk@plt>
 80495c1:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80495c8:	e8 a3 f2 ff ff       	call   8048870 <exit@plt>

080495cd <rio_readlineb>:
 80495cd:	55                   	push   %ebp
 80495ce:	57                   	push   %edi
 80495cf:	56                   	push   %esi
 80495d0:	53                   	push   %ebx
 80495d1:	83 ec 2c             	sub    $0x2c,%esp
 80495d4:	89 d7                	mov    %edx,%edi
 80495d6:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 80495da:	65 8b 15 14 00 00 00 	mov    %gs:0x14,%edx
 80495e1:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 80495e5:	31 d2                	xor    %edx,%edx
 80495e7:	83 f9 01             	cmp    $0x1,%ecx
 80495ea:	76 79                	jbe    8049665 <rio_readlineb+0x98>
 80495ec:	89 c3                	mov    %eax,%ebx
 80495ee:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 80495f2:	bd 01 00 00 00       	mov    $0x1,%ebp
 80495f7:	8d 73 0c             	lea    0xc(%ebx),%esi
 80495fa:	eb 2d                	jmp    8049629 <rio_readlineb+0x5c>
 80495fc:	83 ec 04             	sub    $0x4,%esp
 80495ff:	68 00 20 00 00       	push   $0x2000
 8049604:	56                   	push   %esi
 8049605:	ff 33                	pushl  (%ebx)
 8049607:	e8 94 f1 ff ff       	call   80487a0 <read@plt>
 804960c:	89 43 04             	mov    %eax,0x4(%ebx)
 804960f:	83 c4 10             	add    $0x10,%esp
 8049612:	85 c0                	test   %eax,%eax
 8049614:	79 0c                	jns    8049622 <rio_readlineb+0x55>
 8049616:	e8 b5 f2 ff ff       	call   80488d0 <__errno_location@plt>
 804961b:	83 38 04             	cmpl   $0x4,(%eax)
 804961e:	74 09                	je     8049629 <rio_readlineb+0x5c>
 8049620:	eb 62                	jmp    8049684 <rio_readlineb+0xb7>
 8049622:	85 c0                	test   %eax,%eax
 8049624:	74 63                	je     8049689 <rio_readlineb+0xbc>
 8049626:	89 73 08             	mov    %esi,0x8(%ebx)
 8049629:	8b 43 04             	mov    0x4(%ebx),%eax
 804962c:	85 c0                	test   %eax,%eax
 804962e:	7e cc                	jle    80495fc <rio_readlineb+0x2f>
 8049630:	8b 4b 08             	mov    0x8(%ebx),%ecx
 8049633:	0f b6 11             	movzbl (%ecx),%edx
 8049636:	88 54 24 1b          	mov    %dl,0x1b(%esp)
 804963a:	83 c1 01             	add    $0x1,%ecx
 804963d:	89 4b 08             	mov    %ecx,0x8(%ebx)
 8049640:	83 e8 01             	sub    $0x1,%eax
 8049643:	89 43 04             	mov    %eax,0x4(%ebx)
 8049646:	83 c7 01             	add    $0x1,%edi
 8049649:	88 57 ff             	mov    %dl,-0x1(%edi)
 804964c:	80 fa 0a             	cmp    $0xa,%dl
 804964f:	75 09                	jne    804965a <rio_readlineb+0x8d>
 8049651:	eb 1d                	jmp    8049670 <rio_readlineb+0xa3>
 8049653:	83 fd 01             	cmp    $0x1,%ebp
 8049656:	75 18                	jne    8049670 <rio_readlineb+0xa3>
 8049658:	eb 1b                	jmp    8049675 <rio_readlineb+0xa8>
 804965a:	83 c5 01             	add    $0x1,%ebp
 804965d:	3b 6c 24 08          	cmp    0x8(%esp),%ebp
 8049661:	74 09                	je     804966c <rio_readlineb+0x9f>
 8049663:	eb c4                	jmp    8049629 <rio_readlineb+0x5c>
 8049665:	bd 01 00 00 00       	mov    $0x1,%ebp
 804966a:	eb 04                	jmp    8049670 <rio_readlineb+0xa3>
 804966c:	8b 6c 24 0c          	mov    0xc(%esp),%ebp
 8049670:	c6 07 00             	movb   $0x0,(%edi)
 8049673:	89 e8                	mov    %ebp,%eax
 8049675:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 8049679:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8049680:	74 17                	je     8049699 <rio_readlineb+0xcc>
 8049682:	eb 10                	jmp    8049694 <rio_readlineb+0xc7>
 8049684:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049689:	85 c0                	test   %eax,%eax
 804968b:	74 c6                	je     8049653 <rio_readlineb+0x86>
 804968d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049692:	eb e1                	jmp    8049675 <rio_readlineb+0xa8>
 8049694:	e8 67 f1 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049699:	83 c4 2c             	add    $0x2c,%esp
 804969c:	5b                   	pop    %ebx
 804969d:	5e                   	pop    %esi
 804969e:	5f                   	pop    %edi
 804969f:	5d                   	pop    %ebp
 80496a0:	c3                   	ret    

080496a1 <submitr>:
 80496a1:	55                   	push   %ebp
 80496a2:	57                   	push   %edi
 80496a3:	56                   	push   %esi
 80496a4:	53                   	push   %ebx
 80496a5:	81 ec 60 a0 00 00    	sub    $0xa060,%esp
 80496ab:	8b b4 24 74 a0 00 00 	mov    0xa074(%esp),%esi
 80496b2:	8b 84 24 7c a0 00 00 	mov    0xa07c(%esp),%eax
 80496b9:	89 44 24 10          	mov    %eax,0x10(%esp)
 80496bd:	8b 84 24 80 a0 00 00 	mov    0xa080(%esp),%eax
 80496c4:	89 44 24 14          	mov    %eax,0x14(%esp)
 80496c8:	8b 84 24 84 a0 00 00 	mov    0xa084(%esp),%eax
 80496cf:	89 44 24 18          	mov    %eax,0x18(%esp)
 80496d3:	8b 9c 24 88 a0 00 00 	mov    0xa088(%esp),%ebx
 80496da:	8b 84 24 8c a0 00 00 	mov    0xa08c(%esp),%eax
 80496e1:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 80496e5:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80496eb:	89 84 24 50 a0 00 00 	mov    %eax,0xa050(%esp)
 80496f2:	31 c0                	xor    %eax,%eax
 80496f4:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 80496fb:	00 
 80496fc:	6a 00                	push   $0x0
 80496fe:	6a 01                	push   $0x1
 8049700:	6a 02                	push   $0x2
 8049702:	e8 e9 f1 ff ff       	call   80488f0 <socket@plt>
 8049707:	89 44 24 18          	mov    %eax,0x18(%esp)
 804970b:	83 c4 10             	add    $0x10,%esp
 804970e:	85 c0                	test   %eax,%eax
 8049710:	79 52                	jns    8049764 <submitr+0xc3>
 8049712:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049716:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 804971c:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049723:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 804972a:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049731:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049738:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 804973f:	c7 40 18 63 72 65 61 	movl   $0x61657263,0x18(%eax)
 8049746:	c7 40 1c 74 65 20 73 	movl   $0x73206574,0x1c(%eax)
 804974d:	c7 40 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%eax)
 8049754:	66 c7 40 24 74 00    	movw   $0x74,0x24(%eax)
 804975a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804975f:	e9 3f 06 00 00       	jmp    8049da3 <submitr+0x702>
 8049764:	83 ec 0c             	sub    $0xc,%esp
 8049767:	56                   	push   %esi
 8049768:	e8 a3 f1 ff ff       	call   8048910 <gethostbyname@plt>
 804976d:	83 c4 10             	add    $0x10,%esp
 8049770:	85 c0                	test   %eax,%eax
 8049772:	75 73                	jne    80497e7 <submitr+0x146>
 8049774:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049778:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 804977e:	c7 40 04 72 3a 20 44 	movl   $0x44203a72,0x4(%eax)
 8049785:	c7 40 08 4e 53 20 69 	movl   $0x6920534e,0x8(%eax)
 804978c:	c7 40 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%eax)
 8049793:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 804979a:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 80497a1:	c7 40 18 72 65 73 6f 	movl   $0x6f736572,0x18(%eax)
 80497a8:	c7 40 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%eax)
 80497af:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 80497b6:	c7 40 24 65 72 20 61 	movl   $0x61207265,0x24(%eax)
 80497bd:	c7 40 28 64 64 72 65 	movl   $0x65726464,0x28(%eax)
 80497c4:	66 c7 40 2c 73 73    	movw   $0x7373,0x2c(%eax)
 80497ca:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
 80497ce:	83 ec 0c             	sub    $0xc,%esp
 80497d1:	ff 74 24 14          	pushl  0x14(%esp)
 80497d5:	e8 66 f1 ff ff       	call   8048940 <close@plt>
 80497da:	83 c4 10             	add    $0x10,%esp
 80497dd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80497e2:	e9 bc 05 00 00       	jmp    8049da3 <submitr+0x702>
 80497e7:	8d 74 24 30          	lea    0x30(%esp),%esi
 80497eb:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 80497f2:	00 
 80497f3:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 80497fa:	00 
 80497fb:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
 8049802:	00 
 8049803:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 804980a:	00 
 804980b:	66 c7 44 24 30 02 00 	movw   $0x2,0x30(%esp)
 8049812:	6a 0c                	push   $0xc
 8049814:	ff 70 0c             	pushl  0xc(%eax)
 8049817:	8b 40 10             	mov    0x10(%eax),%eax
 804981a:	ff 30                	pushl  (%eax)
 804981c:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049820:	50                   	push   %eax
 8049821:	e8 3a f0 ff ff       	call   8048860 <__memmove_chk@plt>
 8049826:	0f b7 84 24 84 a0 00 	movzwl 0xa084(%esp),%eax
 804982d:	00 
 804982e:	66 c1 c8 08          	ror    $0x8,%ax
 8049832:	66 89 44 24 42       	mov    %ax,0x42(%esp)
 8049837:	83 c4 0c             	add    $0xc,%esp
 804983a:	6a 10                	push   $0x10
 804983c:	56                   	push   %esi
 804983d:	ff 74 24 14          	pushl  0x14(%esp)
 8049841:	e8 ea f0 ff ff       	call   8048930 <connect@plt>
 8049846:	83 c4 10             	add    $0x10,%esp
 8049849:	85 c0                	test   %eax,%eax
 804984b:	79 65                	jns    80498b2 <submitr+0x211>
 804984d:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049851:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049857:	c7 40 04 72 3a 20 55 	movl   $0x55203a72,0x4(%eax)
 804985e:	c7 40 08 6e 61 62 6c 	movl   $0x6c62616e,0x8(%eax)
 8049865:	c7 40 0c 65 20 74 6f 	movl   $0x6f742065,0xc(%eax)
 804986c:	c7 40 10 20 63 6f 6e 	movl   $0x6e6f6320,0x10(%eax)
 8049873:	c7 40 14 6e 65 63 74 	movl   $0x7463656e,0x14(%eax)
 804987a:	c7 40 18 20 74 6f 20 	movl   $0x206f7420,0x18(%eax)
 8049881:	c7 40 1c 74 68 65 20 	movl   $0x20656874,0x1c(%eax)
 8049888:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 804988f:	66 c7 40 24 65 72    	movw   $0x7265,0x24(%eax)
 8049895:	c6 40 26 00          	movb   $0x0,0x26(%eax)
 8049899:	83 ec 0c             	sub    $0xc,%esp
 804989c:	ff 74 24 14          	pushl  0x14(%esp)
 80498a0:	e8 9b f0 ff ff       	call   8048940 <close@plt>
 80498a5:	83 c4 10             	add    $0x10,%esp
 80498a8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80498ad:	e9 f1 04 00 00       	jmp    8049da3 <submitr+0x702>
 80498b2:	be ff ff ff ff       	mov    $0xffffffff,%esi
 80498b7:	b8 00 00 00 00       	mov    $0x0,%eax
 80498bc:	89 f1                	mov    %esi,%ecx
 80498be:	89 df                	mov    %ebx,%edi
 80498c0:	f2 ae                	repnz scas %es:(%edi),%al
 80498c2:	f7 d1                	not    %ecx
 80498c4:	89 cd                	mov    %ecx,%ebp
 80498c6:	89 f1                	mov    %esi,%ecx
 80498c8:	8b 7c 24 0c          	mov    0xc(%esp),%edi
 80498cc:	f2 ae                	repnz scas %es:(%edi),%al
 80498ce:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 80498d2:	89 f1                	mov    %esi,%ecx
 80498d4:	8b 7c 24 10          	mov    0x10(%esp),%edi
 80498d8:	f2 ae                	repnz scas %es:(%edi),%al
 80498da:	89 ca                	mov    %ecx,%edx
 80498dc:	f7 d2                	not    %edx
 80498de:	89 f1                	mov    %esi,%ecx
 80498e0:	8b 7c 24 14          	mov    0x14(%esp),%edi
 80498e4:	f2 ae                	repnz scas %es:(%edi),%al
 80498e6:	2b 54 24 1c          	sub    0x1c(%esp),%edx
 80498ea:	29 ca                	sub    %ecx,%edx
 80498ec:	8d 44 6d fd          	lea    -0x3(%ebp,%ebp,2),%eax
 80498f0:	8d 44 02 7b          	lea    0x7b(%edx,%eax,1),%eax
 80498f4:	3d 00 20 00 00       	cmp    $0x2000,%eax
 80498f9:	76 7e                	jbe    8049979 <submitr+0x2d8>
 80498fb:	8b 44 24 18          	mov    0x18(%esp),%eax
 80498ff:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049905:	c7 40 04 72 3a 20 52 	movl   $0x52203a72,0x4(%eax)
 804990c:	c7 40 08 65 73 75 6c 	movl   $0x6c757365,0x8(%eax)
 8049913:	c7 40 0c 74 20 73 74 	movl   $0x74732074,0xc(%eax)
 804991a:	c7 40 10 72 69 6e 67 	movl   $0x676e6972,0x10(%eax)
 8049921:	c7 40 14 20 74 6f 6f 	movl   $0x6f6f7420,0x14(%eax)
 8049928:	c7 40 18 20 6c 61 72 	movl   $0x72616c20,0x18(%eax)
 804992f:	c7 40 1c 67 65 2e 20 	movl   $0x202e6567,0x1c(%eax)
 8049936:	c7 40 20 49 6e 63 72 	movl   $0x72636e49,0x20(%eax)
 804993d:	c7 40 24 65 61 73 65 	movl   $0x65736165,0x24(%eax)
 8049944:	c7 40 28 20 53 55 42 	movl   $0x42555320,0x28(%eax)
 804994b:	c7 40 2c 4d 49 54 52 	movl   $0x5254494d,0x2c(%eax)
 8049952:	c7 40 30 5f 4d 41 58 	movl   $0x58414d5f,0x30(%eax)
 8049959:	c7 40 34 42 55 46 00 	movl   $0x465542,0x34(%eax)
 8049960:	83 ec 0c             	sub    $0xc,%esp
 8049963:	ff 74 24 14          	pushl  0x14(%esp)
 8049967:	e8 d4 ef ff ff       	call   8048940 <close@plt>
 804996c:	83 c4 10             	add    $0x10,%esp
 804996f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049974:	e9 2a 04 00 00       	jmp    8049da3 <submitr+0x702>
 8049979:	8d 94 24 4c 40 00 00 	lea    0x404c(%esp),%edx
 8049980:	b9 00 08 00 00       	mov    $0x800,%ecx
 8049985:	b8 00 00 00 00       	mov    $0x0,%eax
 804998a:	89 d7                	mov    %edx,%edi
 804998c:	f3 ab                	rep stos %eax,%es:(%edi)
 804998e:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049993:	89 df                	mov    %ebx,%edi
 8049995:	f2 ae                	repnz scas %es:(%edi),%al
 8049997:	f7 d1                	not    %ecx
 8049999:	89 ce                	mov    %ecx,%esi
 804999b:	83 ee 01             	sub    $0x1,%esi
 804999e:	0f 84 5c 04 00 00    	je     8049e00 <submitr+0x75f>
 80499a4:	89 d5                	mov    %edx,%ebp
 80499a6:	bf d9 ff 00 00       	mov    $0xffd9,%edi
 80499ab:	0f b6 13             	movzbl (%ebx),%edx
 80499ae:	8d 4a d6             	lea    -0x2a(%edx),%ecx
 80499b1:	b8 01 00 00 00       	mov    $0x1,%eax
 80499b6:	80 f9 0f             	cmp    $0xf,%cl
 80499b9:	77 0a                	ja     80499c5 <submitr+0x324>
 80499bb:	89 f8                	mov    %edi,%eax
 80499bd:	d3 e8                	shr    %cl,%eax
 80499bf:	83 f0 01             	xor    $0x1,%eax
 80499c2:	83 e0 01             	and    $0x1,%eax
 80499c5:	80 fa 5f             	cmp    $0x5f,%dl
 80499c8:	0f 94 c1             	sete   %cl
 80499cb:	38 c1                	cmp    %al,%cl
 80499cd:	73 0c                	jae    80499db <submitr+0x33a>
 80499cf:	89 d0                	mov    %edx,%eax
 80499d1:	83 e0 df             	and    $0xffffffdf,%eax
 80499d4:	83 e8 41             	sub    $0x41,%eax
 80499d7:	3c 19                	cmp    $0x19,%al
 80499d9:	77 08                	ja     80499e3 <submitr+0x342>
 80499db:	88 55 00             	mov    %dl,0x0(%ebp)
 80499de:	8d 6d 01             	lea    0x1(%ebp),%ebp
 80499e1:	eb 62                	jmp    8049a45 <submitr+0x3a4>
 80499e3:	80 fa 20             	cmp    $0x20,%dl
 80499e6:	75 09                	jne    80499f1 <submitr+0x350>
 80499e8:	c6 45 00 2b          	movb   $0x2b,0x0(%ebp)
 80499ec:	8d 6d 01             	lea    0x1(%ebp),%ebp
 80499ef:	eb 54                	jmp    8049a45 <submitr+0x3a4>
 80499f1:	8d 42 e0             	lea    -0x20(%edx),%eax
 80499f4:	3c 5f                	cmp    $0x5f,%al
 80499f6:	76 09                	jbe    8049a01 <submitr+0x360>
 80499f8:	80 fa 09             	cmp    $0x9,%dl
 80499fb:	0f 85 bb 03 00 00    	jne    8049dbc <submitr+0x71b>
 8049a01:	83 ec 0c             	sub    $0xc,%esp
 8049a04:	0f b6 d2             	movzbl %dl,%edx
 8049a07:	52                   	push   %edx
 8049a08:	68 10 ab 04 08       	push   $0x804ab10
 8049a0d:	6a 08                	push   $0x8
 8049a0f:	6a 01                	push   $0x1
 8049a11:	8d 84 24 68 80 00 00 	lea    0x8068(%esp),%eax
 8049a18:	50                   	push   %eax
 8049a19:	e8 42 ef ff ff       	call   8048960 <__sprintf_chk@plt>
 8049a1e:	0f b6 84 24 6c 80 00 	movzbl 0x806c(%esp),%eax
 8049a25:	00 
 8049a26:	88 45 00             	mov    %al,0x0(%ebp)
 8049a29:	0f b6 84 24 6d 80 00 	movzbl 0x806d(%esp),%eax
 8049a30:	00 
 8049a31:	88 45 01             	mov    %al,0x1(%ebp)
 8049a34:	0f b6 84 24 6e 80 00 	movzbl 0x806e(%esp),%eax
 8049a3b:	00 
 8049a3c:	88 45 02             	mov    %al,0x2(%ebp)
 8049a3f:	83 c4 20             	add    $0x20,%esp
 8049a42:	8d 6d 03             	lea    0x3(%ebp),%ebp
 8049a45:	83 c3 01             	add    $0x1,%ebx
 8049a48:	83 ee 01             	sub    $0x1,%esi
 8049a4b:	0f 85 5a ff ff ff    	jne    80499ab <submitr+0x30a>
 8049a51:	e9 aa 03 00 00       	jmp    8049e00 <submitr+0x75f>
 8049a56:	83 ec 04             	sub    $0x4,%esp
 8049a59:	53                   	push   %ebx
 8049a5a:	56                   	push   %esi
 8049a5b:	55                   	push   %ebp
 8049a5c:	e8 2f ee ff ff       	call   8048890 <write@plt>
 8049a61:	83 c4 10             	add    $0x10,%esp
 8049a64:	85 c0                	test   %eax,%eax
 8049a66:	7f 0f                	jg     8049a77 <submitr+0x3d6>
 8049a68:	e8 63 ee ff ff       	call   80488d0 <__errno_location@plt>
 8049a6d:	83 38 04             	cmpl   $0x4,(%eax)
 8049a70:	75 0f                	jne    8049a81 <submitr+0x3e0>
 8049a72:	b8 00 00 00 00       	mov    $0x0,%eax
 8049a77:	01 c6                	add    %eax,%esi
 8049a79:	29 c3                	sub    %eax,%ebx
 8049a7b:	75 d9                	jne    8049a56 <submitr+0x3b5>
 8049a7d:	85 ff                	test   %edi,%edi
 8049a7f:	79 69                	jns    8049aea <submitr+0x449>
 8049a81:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049a85:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049a8b:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049a92:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049a99:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049aa0:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049aa7:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049aae:	c7 40 18 77 72 69 74 	movl   $0x74697277,0x18(%eax)
 8049ab5:	c7 40 1c 65 20 74 6f 	movl   $0x6f742065,0x1c(%eax)
 8049abc:	c7 40 20 20 74 68 65 	movl   $0x65687420,0x20(%eax)
 8049ac3:	c7 40 24 20 73 65 72 	movl   $0x72657320,0x24(%eax)
 8049aca:	c7 40 28 76 65 72 00 	movl   $0x726576,0x28(%eax)
 8049ad1:	83 ec 0c             	sub    $0xc,%esp
 8049ad4:	ff 74 24 14          	pushl  0x14(%esp)
 8049ad8:	e8 63 ee ff ff       	call   8048940 <close@plt>
 8049add:	83 c4 10             	add    $0x10,%esp
 8049ae0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049ae5:	e9 b9 02 00 00       	jmp    8049da3 <submitr+0x702>
 8049aea:	8b 44 24 08          	mov    0x8(%esp),%eax
 8049aee:	89 44 24 40          	mov    %eax,0x40(%esp)
 8049af2:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%esp)
 8049af9:	00 
 8049afa:	8d 44 24 4c          	lea    0x4c(%esp),%eax
 8049afe:	89 44 24 48          	mov    %eax,0x48(%esp)
 8049b02:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049b07:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049b0e:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049b12:	e8 b6 fa ff ff       	call   80495cd <rio_readlineb>
 8049b17:	85 c0                	test   %eax,%eax
 8049b19:	7f 7d                	jg     8049b98 <submitr+0x4f7>
 8049b1b:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049b1f:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049b25:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049b2c:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049b33:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049b3a:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049b41:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049b48:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049b4f:	c7 40 1c 20 66 69 72 	movl   $0x72696620,0x1c(%eax)
 8049b56:	c7 40 20 73 74 20 68 	movl   $0x68207473,0x20(%eax)
 8049b5d:	c7 40 24 65 61 64 65 	movl   $0x65646165,0x24(%eax)
 8049b64:	c7 40 28 72 20 66 72 	movl   $0x72662072,0x28(%eax)
 8049b6b:	c7 40 2c 6f 6d 20 73 	movl   $0x73206d6f,0x2c(%eax)
 8049b72:	c7 40 30 65 72 76 65 	movl   $0x65767265,0x30(%eax)
 8049b79:	66 c7 40 34 72 00    	movw   $0x72,0x34(%eax)
 8049b7f:	83 ec 0c             	sub    $0xc,%esp
 8049b82:	ff 74 24 14          	pushl  0x14(%esp)
 8049b86:	e8 b5 ed ff ff       	call   8048940 <close@plt>
 8049b8b:	83 c4 10             	add    $0x10,%esp
 8049b8e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049b93:	e9 0b 02 00 00       	jmp    8049da3 <submitr+0x702>
 8049b98:	83 ec 0c             	sub    $0xc,%esp
 8049b9b:	8d 84 24 58 80 00 00 	lea    0x8058(%esp),%eax
 8049ba2:	50                   	push   %eax
 8049ba3:	8d 44 24 3c          	lea    0x3c(%esp),%eax
 8049ba7:	50                   	push   %eax
 8049ba8:	8d 84 24 60 60 00 00 	lea    0x6060(%esp),%eax
 8049baf:	50                   	push   %eax
 8049bb0:	68 17 ab 04 08       	push   $0x804ab17
 8049bb5:	8d 84 24 68 20 00 00 	lea    0x2068(%esp),%eax
 8049bbc:	50                   	push   %eax
 8049bbd:	e8 ee ec ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8049bc2:	8b 44 24 4c          	mov    0x4c(%esp),%eax
 8049bc6:	83 c4 20             	add    $0x20,%esp
 8049bc9:	3d c8 00 00 00       	cmp    $0xc8,%eax
 8049bce:	0f 84 c4 00 00 00    	je     8049c98 <submitr+0x5f7>
 8049bd4:	83 ec 08             	sub    $0x8,%esp
 8049bd7:	8d 94 24 54 80 00 00 	lea    0x8054(%esp),%edx
 8049bde:	52                   	push   %edx
 8049bdf:	50                   	push   %eax
 8049be0:	68 28 aa 04 08       	push   $0x804aa28
 8049be5:	6a ff                	push   $0xffffffff
 8049be7:	6a 01                	push   $0x1
 8049be9:	ff 74 24 34          	pushl  0x34(%esp)
 8049bed:	e8 6e ed ff ff       	call   8048960 <__sprintf_chk@plt>
 8049bf2:	83 c4 14             	add    $0x14,%esp
 8049bf5:	ff 74 24 14          	pushl  0x14(%esp)
 8049bf9:	e8 42 ed ff ff       	call   8048940 <close@plt>
 8049bfe:	83 c4 10             	add    $0x10,%esp
 8049c01:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049c06:	e9 98 01 00 00       	jmp    8049da3 <submitr+0x702>
 8049c0b:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049c10:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049c17:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049c1b:	e8 ad f9 ff ff       	call   80495cd <rio_readlineb>
 8049c20:	85 c0                	test   %eax,%eax
 8049c22:	7f 74                	jg     8049c98 <submitr+0x5f7>
 8049c24:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049c28:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049c2e:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049c35:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049c3c:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049c43:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049c4a:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049c51:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049c58:	c7 40 1c 20 68 65 61 	movl   $0x61656820,0x1c(%eax)
 8049c5f:	c7 40 20 64 65 72 73 	movl   $0x73726564,0x20(%eax)
 8049c66:	c7 40 24 20 66 72 6f 	movl   $0x6f726620,0x24(%eax)
 8049c6d:	c7 40 28 6d 20 73 65 	movl   $0x6573206d,0x28(%eax)
 8049c74:	c7 40 2c 72 76 65 72 	movl   $0x72657672,0x2c(%eax)
 8049c7b:	c6 40 30 00          	movb   $0x0,0x30(%eax)
 8049c7f:	83 ec 0c             	sub    $0xc,%esp
 8049c82:	ff 74 24 14          	pushl  0x14(%esp)
 8049c86:	e8 b5 ec ff ff       	call   8048940 <close@plt>
 8049c8b:	83 c4 10             	add    $0x10,%esp
 8049c8e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049c93:	e9 0b 01 00 00       	jmp    8049da3 <submitr+0x702>
 8049c98:	80 bc 24 4c 20 00 00 	cmpb   $0xd,0x204c(%esp)
 8049c9f:	0d 
 8049ca0:	0f 85 65 ff ff ff    	jne    8049c0b <submitr+0x56a>
 8049ca6:	80 bc 24 4d 20 00 00 	cmpb   $0xa,0x204d(%esp)
 8049cad:	0a 
 8049cae:	0f 85 57 ff ff ff    	jne    8049c0b <submitr+0x56a>
 8049cb4:	80 bc 24 4e 20 00 00 	cmpb   $0x0,0x204e(%esp)
 8049cbb:	00 
 8049cbc:	0f 85 49 ff ff ff    	jne    8049c0b <submitr+0x56a>
 8049cc2:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049cc7:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049cce:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049cd2:	e8 f6 f8 ff ff       	call   80495cd <rio_readlineb>
 8049cd7:	85 c0                	test   %eax,%eax
 8049cd9:	7f 7b                	jg     8049d56 <submitr+0x6b5>
 8049cdb:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049cdf:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049ce5:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049cec:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049cf3:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049cfa:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049d01:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049d08:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049d0f:	c7 40 1c 20 73 74 61 	movl   $0x61747320,0x1c(%eax)
 8049d16:	c7 40 20 74 75 73 20 	movl   $0x20737574,0x20(%eax)
 8049d1d:	c7 40 24 6d 65 73 73 	movl   $0x7373656d,0x24(%eax)
 8049d24:	c7 40 28 61 67 65 20 	movl   $0x20656761,0x28(%eax)
 8049d2b:	c7 40 2c 66 72 6f 6d 	movl   $0x6d6f7266,0x2c(%eax)
 8049d32:	c7 40 30 20 73 65 72 	movl   $0x72657320,0x30(%eax)
 8049d39:	c7 40 34 76 65 72 00 	movl   $0x726576,0x34(%eax)
 8049d40:	83 ec 0c             	sub    $0xc,%esp
 8049d43:	ff 74 24 14          	pushl  0x14(%esp)
 8049d47:	e8 f4 eb ff ff       	call   8048940 <close@plt>
 8049d4c:	83 c4 10             	add    $0x10,%esp
 8049d4f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049d54:	eb 4d                	jmp    8049da3 <submitr+0x702>
 8049d56:	83 ec 08             	sub    $0x8,%esp
 8049d59:	8d 84 24 54 20 00 00 	lea    0x2054(%esp),%eax
 8049d60:	50                   	push   %eax
 8049d61:	8b 7c 24 24          	mov    0x24(%esp),%edi
 8049d65:	57                   	push   %edi
 8049d66:	e8 a5 ea ff ff       	call   8048810 <strcpy@plt>
 8049d6b:	83 c4 04             	add    $0x4,%esp
 8049d6e:	ff 74 24 14          	pushl  0x14(%esp)
 8049d72:	e8 c9 eb ff ff       	call   8048940 <close@plt>
 8049d77:	0f b6 17             	movzbl (%edi),%edx
 8049d7a:	b8 4f 00 00 00       	mov    $0x4f,%eax
 8049d7f:	83 c4 10             	add    $0x10,%esp
 8049d82:	29 d0                	sub    %edx,%eax
 8049d84:	75 13                	jne    8049d99 <submitr+0x6f8>
 8049d86:	0f b6 57 01          	movzbl 0x1(%edi),%edx
 8049d8a:	b8 4b 00 00 00       	mov    $0x4b,%eax
 8049d8f:	29 d0                	sub    %edx,%eax
 8049d91:	75 06                	jne    8049d99 <submitr+0x6f8>
 8049d93:	0f b6 47 02          	movzbl 0x2(%edi),%eax
 8049d97:	f7 d8                	neg    %eax
 8049d99:	85 c0                	test   %eax,%eax
 8049d9b:	0f 95 c0             	setne  %al
 8049d9e:	0f b6 c0             	movzbl %al,%eax
 8049da1:	f7 d8                	neg    %eax
 8049da3:	8b bc 24 4c a0 00 00 	mov    0xa04c(%esp),%edi
 8049daa:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 8049db1:	0f 84 a9 00 00 00    	je     8049e60 <submitr+0x7bf>
 8049db7:	e9 9f 00 00 00       	jmp    8049e5b <submitr+0x7ba>
 8049dbc:	a1 58 aa 04 08       	mov    0x804aa58,%eax
 8049dc1:	8b 7c 24 18          	mov    0x18(%esp),%edi
 8049dc5:	89 07                	mov    %eax,(%edi)
 8049dc7:	a1 97 aa 04 08       	mov    0x804aa97,%eax
 8049dcc:	89 47 3f             	mov    %eax,0x3f(%edi)
 8049dcf:	89 f8                	mov    %edi,%eax
 8049dd1:	83 c7 04             	add    $0x4,%edi
 8049dd4:	83 e7 fc             	and    $0xfffffffc,%edi
 8049dd7:	29 f8                	sub    %edi,%eax
 8049dd9:	be 58 aa 04 08       	mov    $0x804aa58,%esi
 8049dde:	29 c6                	sub    %eax,%esi
 8049de0:	83 c0 43             	add    $0x43,%eax
 8049de3:	c1 e8 02             	shr    $0x2,%eax
 8049de6:	89 c1                	mov    %eax,%ecx
 8049de8:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049dea:	83 ec 0c             	sub    $0xc,%esp
 8049ded:	ff 74 24 14          	pushl  0x14(%esp)
 8049df1:	e8 4a eb ff ff       	call   8048940 <close@plt>
 8049df6:	83 c4 10             	add    $0x10,%esp
 8049df9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049dfe:	eb a3                	jmp    8049da3 <submitr+0x702>
 8049e00:	8d 84 24 4c 40 00 00 	lea    0x404c(%esp),%eax
 8049e07:	50                   	push   %eax
 8049e08:	ff 74 24 18          	pushl  0x18(%esp)
 8049e0c:	ff 74 24 18          	pushl  0x18(%esp)
 8049e10:	ff 74 24 18          	pushl  0x18(%esp)
 8049e14:	68 9c aa 04 08       	push   $0x804aa9c
 8049e19:	68 00 20 00 00       	push   $0x2000
 8049e1e:	6a 01                	push   $0x1
 8049e20:	8d bc 24 68 20 00 00 	lea    0x2068(%esp),%edi
 8049e27:	57                   	push   %edi
 8049e28:	e8 33 eb ff ff       	call   8048960 <__sprintf_chk@plt>
 8049e2d:	b8 00 00 00 00       	mov    $0x0,%eax
 8049e32:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049e37:	f2 ae                	repnz scas %es:(%edi),%al
 8049e39:	f7 d1                	not    %ecx
 8049e3b:	8d 79 ff             	lea    -0x1(%ecx),%edi
 8049e3e:	83 c4 20             	add    $0x20,%esp
 8049e41:	89 fb                	mov    %edi,%ebx
 8049e43:	8d b4 24 4c 20 00 00 	lea    0x204c(%esp),%esi
 8049e4a:	8b 6c 24 08          	mov    0x8(%esp),%ebp
 8049e4e:	85 ff                	test   %edi,%edi
 8049e50:	0f 85 00 fc ff ff    	jne    8049a56 <submitr+0x3b5>
 8049e56:	e9 8f fc ff ff       	jmp    8049aea <submitr+0x449>
 8049e5b:	e8 a0 e9 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049e60:	81 c4 5c a0 00 00    	add    $0xa05c,%esp
 8049e66:	5b                   	pop    %ebx
 8049e67:	5e                   	pop    %esi
 8049e68:	5f                   	pop    %edi
 8049e69:	5d                   	pop    %ebp
 8049e6a:	c3                   	ret    

08049e6b <init_timeout>:
 8049e6b:	53                   	push   %ebx
 8049e6c:	83 ec 08             	sub    $0x8,%esp
 8049e6f:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8049e73:	85 db                	test   %ebx,%ebx
 8049e75:	74 24                	je     8049e9b <init_timeout+0x30>
 8049e77:	83 ec 08             	sub    $0x8,%esp
 8049e7a:	68 aa 95 04 08       	push   $0x80495aa
 8049e7f:	6a 0e                	push   $0xe
 8049e81:	e8 4a e9 ff ff       	call   80487d0 <signal@plt>
 8049e86:	85 db                	test   %ebx,%ebx
 8049e88:	b8 00 00 00 00       	mov    $0x0,%eax
 8049e8d:	0f 48 d8             	cmovs  %eax,%ebx
 8049e90:	89 1c 24             	mov    %ebx,(%esp)
 8049e93:	e8 58 e9 ff ff       	call   80487f0 <alarm@plt>
 8049e98:	83 c4 10             	add    $0x10,%esp
 8049e9b:	83 c4 08             	add    $0x8,%esp
 8049e9e:	5b                   	pop    %ebx
 8049e9f:	c3                   	ret    

08049ea0 <init_driver>:
 8049ea0:	57                   	push   %edi
 8049ea1:	56                   	push   %esi
 8049ea2:	53                   	push   %ebx
 8049ea3:	83 ec 28             	sub    $0x28,%esp
 8049ea6:	8b 74 24 38          	mov    0x38(%esp),%esi
 8049eaa:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049eb0:	89 44 24 24          	mov    %eax,0x24(%esp)
 8049eb4:	31 c0                	xor    %eax,%eax
 8049eb6:	6a 01                	push   $0x1
 8049eb8:	6a 0d                	push   $0xd
 8049eba:	e8 11 e9 ff ff       	call   80487d0 <signal@plt>
 8049ebf:	83 c4 08             	add    $0x8,%esp
 8049ec2:	6a 01                	push   $0x1
 8049ec4:	6a 1d                	push   $0x1d
 8049ec6:	e8 05 e9 ff ff       	call   80487d0 <signal@plt>
 8049ecb:	83 c4 08             	add    $0x8,%esp
 8049ece:	6a 01                	push   $0x1
 8049ed0:	6a 1d                	push   $0x1d
 8049ed2:	e8 f9 e8 ff ff       	call   80487d0 <signal@plt>
 8049ed7:	83 c4 0c             	add    $0xc,%esp
 8049eda:	6a 00                	push   $0x0
 8049edc:	6a 01                	push   $0x1
 8049ede:	6a 02                	push   $0x2
 8049ee0:	e8 0b ea ff ff       	call   80488f0 <socket@plt>
 8049ee5:	83 c4 10             	add    $0x10,%esp
 8049ee8:	85 c0                	test   %eax,%eax
 8049eea:	79 4e                	jns    8049f3a <init_driver+0x9a>
 8049eec:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049ef2:	c7 46 04 72 3a 20 43 	movl   $0x43203a72,0x4(%esi)
 8049ef9:	c7 46 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%esi)
 8049f00:	c7 46 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%esi)
 8049f07:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049f0e:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049f15:	c7 46 18 63 72 65 61 	movl   $0x61657263,0x18(%esi)
 8049f1c:	c7 46 1c 74 65 20 73 	movl   $0x73206574,0x1c(%esi)
 8049f23:	c7 46 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%esi)
 8049f2a:	66 c7 46 24 74 00    	movw   $0x74,0x24(%esi)
 8049f30:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049f35:	e9 1f 01 00 00       	jmp    804a059 <init_driver+0x1b9>
 8049f3a:	89 c3                	mov    %eax,%ebx
 8049f3c:	83 ec 0c             	sub    $0xc,%esp
 8049f3f:	68 28 ab 04 08       	push   $0x804ab28
 8049f44:	e8 c7 e9 ff ff       	call   8048910 <gethostbyname@plt>
 8049f49:	83 c4 10             	add    $0x10,%esp
 8049f4c:	85 c0                	test   %eax,%eax
 8049f4e:	75 6c                	jne    8049fbc <init_driver+0x11c>
 8049f50:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049f56:	c7 46 04 72 3a 20 44 	movl   $0x44203a72,0x4(%esi)
 8049f5d:	c7 46 08 4e 53 20 69 	movl   $0x6920534e,0x8(%esi)
 8049f64:	c7 46 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%esi)
 8049f6b:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049f72:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049f79:	c7 46 18 72 65 73 6f 	movl   $0x6f736572,0x18(%esi)
 8049f80:	c7 46 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%esi)
 8049f87:	c7 46 20 73 65 72 76 	movl   $0x76726573,0x20(%esi)
 8049f8e:	c7 46 24 65 72 20 61 	movl   $0x61207265,0x24(%esi)
 8049f95:	c7 46 28 64 64 72 65 	movl   $0x65726464,0x28(%esi)
 8049f9c:	66 c7 46 2c 73 73    	movw   $0x7373,0x2c(%esi)
 8049fa2:	c6 46 2e 00          	movb   $0x0,0x2e(%esi)
 8049fa6:	83 ec 0c             	sub    $0xc,%esp
 8049fa9:	53                   	push   %ebx
 8049faa:	e8 91 e9 ff ff       	call   8048940 <close@plt>
 8049faf:	83 c4 10             	add    $0x10,%esp
 8049fb2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049fb7:	e9 9d 00 00 00       	jmp    804a059 <init_driver+0x1b9>
 8049fbc:	8d 7c 24 0c          	lea    0xc(%esp),%edi
 8049fc0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8049fc7:	00 
 8049fc8:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8049fcf:	00 
 8049fd0:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8049fd7:	00 
 8049fd8:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8049fdf:	00 
 8049fe0:	66 c7 44 24 0c 02 00 	movw   $0x2,0xc(%esp)
 8049fe7:	6a 0c                	push   $0xc
 8049fe9:	ff 70 0c             	pushl  0xc(%eax)
 8049fec:	8b 40 10             	mov    0x10(%eax),%eax
 8049fef:	ff 30                	pushl  (%eax)
 8049ff1:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8049ff5:	50                   	push   %eax
 8049ff6:	e8 65 e8 ff ff       	call   8048860 <__memmove_chk@plt>
 8049ffb:	66 c7 44 24 1e 43 31 	movw   $0x3143,0x1e(%esp)
 804a002:	83 c4 0c             	add    $0xc,%esp
 804a005:	6a 10                	push   $0x10
 804a007:	57                   	push   %edi
 804a008:	53                   	push   %ebx
 804a009:	e8 22 e9 ff ff       	call   8048930 <connect@plt>
 804a00e:	83 c4 10             	add    $0x10,%esp
 804a011:	85 c0                	test   %eax,%eax
 804a013:	79 2a                	jns    804a03f <init_driver+0x19f>
 804a015:	83 ec 0c             	sub    $0xc,%esp
 804a018:	68 28 ab 04 08       	push   $0x804ab28
 804a01d:	68 e8 aa 04 08       	push   $0x804aae8
 804a022:	6a ff                	push   $0xffffffff
 804a024:	6a 01                	push   $0x1
 804a026:	56                   	push   %esi
 804a027:	e8 34 e9 ff ff       	call   8048960 <__sprintf_chk@plt>
 804a02c:	83 c4 14             	add    $0x14,%esp
 804a02f:	53                   	push   %ebx
 804a030:	e8 0b e9 ff ff       	call   8048940 <close@plt>
 804a035:	83 c4 10             	add    $0x10,%esp
 804a038:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a03d:	eb 1a                	jmp    804a059 <init_driver+0x1b9>
 804a03f:	83 ec 0c             	sub    $0xc,%esp
 804a042:	53                   	push   %ebx
 804a043:	e8 f8 e8 ff ff       	call   8048940 <close@plt>
 804a048:	66 c7 06 4f 4b       	movw   $0x4b4f,(%esi)
 804a04d:	c6 46 02 00          	movb   $0x0,0x2(%esi)
 804a051:	83 c4 10             	add    $0x10,%esp
 804a054:	b8 00 00 00 00       	mov    $0x0,%eax
 804a059:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 804a05d:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 804a064:	74 05                	je     804a06b <init_driver+0x1cb>
 804a066:	e8 95 e7 ff ff       	call   8048800 <__stack_chk_fail@plt>
 804a06b:	83 c4 20             	add    $0x20,%esp
 804a06e:	5b                   	pop    %ebx
 804a06f:	5e                   	pop    %esi
 804a070:	5f                   	pop    %edi
 804a071:	c3                   	ret    

0804a072 <driver_post>:
 804a072:	53                   	push   %ebx
 804a073:	83 ec 08             	sub    $0x8,%esp
 804a076:	8b 44 24 10          	mov    0x10(%esp),%eax
 804a07a:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 804a07e:	83 7c 24 18 00       	cmpl   $0x0,0x18(%esp)
 804a083:	74 26                	je     804a0ab <driver_post+0x39>
 804a085:	83 ec 04             	sub    $0x4,%esp
 804a088:	ff 74 24 18          	pushl  0x18(%esp)
 804a08c:	68 3d ab 04 08       	push   $0x804ab3d
 804a091:	6a 01                	push   $0x1
 804a093:	e8 48 e8 ff ff       	call   80488e0 <__printf_chk@plt>
 804a098:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a09d:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a0a1:	83 c4 10             	add    $0x10,%esp
 804a0a4:	b8 00 00 00 00       	mov    $0x0,%eax
 804a0a9:	eb 3e                	jmp    804a0e9 <driver_post+0x77>
 804a0ab:	85 c0                	test   %eax,%eax
 804a0ad:	74 2c                	je     804a0db <driver_post+0x69>
 804a0af:	80 38 00             	cmpb   $0x0,(%eax)
 804a0b2:	74 27                	je     804a0db <driver_post+0x69>
 804a0b4:	83 ec 04             	sub    $0x4,%esp
 804a0b7:	53                   	push   %ebx
 804a0b8:	ff 74 24 1c          	pushl  0x1c(%esp)
 804a0bc:	68 54 ab 04 08       	push   $0x804ab54
 804a0c1:	50                   	push   %eax
 804a0c2:	68 5b ab 04 08       	push   $0x804ab5b
 804a0c7:	68 31 43 00 00       	push   $0x4331
 804a0cc:	68 28 ab 04 08       	push   $0x804ab28
 804a0d1:	e8 cb f5 ff ff       	call   80496a1 <submitr>
 804a0d6:	83 c4 20             	add    $0x20,%esp
 804a0d9:	eb 0e                	jmp    804a0e9 <driver_post+0x77>
 804a0db:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a0e0:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a0e4:	b8 00 00 00 00       	mov    $0x0,%eax
 804a0e9:	83 c4 08             	add    $0x8,%esp
 804a0ec:	5b                   	pop    %ebx
 804a0ed:	c3                   	ret    
 804a0ee:	66 90                	xchg   %ax,%ax

0804a0f0 <__libc_csu_init>:
 804a0f0:	55                   	push   %ebp
 804a0f1:	57                   	push   %edi
 804a0f2:	56                   	push   %esi
 804a0f3:	53                   	push   %ebx
 804a0f4:	e8 b7 e8 ff ff       	call   80489b0 <__x86.get_pc_thunk.bx>
 804a0f9:	81 c3 07 2f 00 00    	add    $0x2f07,%ebx
 804a0ff:	83 ec 0c             	sub    $0xc,%esp
 804a102:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 804a106:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804a10c:	e8 4f e6 ff ff       	call   8048760 <_init>
 804a111:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 804a117:	29 c6                	sub    %eax,%esi
 804a119:	c1 fe 02             	sar    $0x2,%esi
 804a11c:	85 f6                	test   %esi,%esi
 804a11e:	74 25                	je     804a145 <__libc_csu_init+0x55>
 804a120:	31 ff                	xor    %edi,%edi
 804a122:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804a128:	83 ec 04             	sub    $0x4,%esp
 804a12b:	ff 74 24 2c          	pushl  0x2c(%esp)
 804a12f:	ff 74 24 2c          	pushl  0x2c(%esp)
 804a133:	55                   	push   %ebp
 804a134:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804a13b:	83 c7 01             	add    $0x1,%edi
 804a13e:	83 c4 10             	add    $0x10,%esp
 804a141:	39 f7                	cmp    %esi,%edi
 804a143:	75 e3                	jne    804a128 <__libc_csu_init+0x38>
 804a145:	83 c4 0c             	add    $0xc,%esp
 804a148:	5b                   	pop    %ebx
 804a149:	5e                   	pop    %esi
 804a14a:	5f                   	pop    %edi
 804a14b:	5d                   	pop    %ebp
 804a14c:	c3                   	ret    
 804a14d:	8d 76 00             	lea    0x0(%esi),%esi

0804a150 <__libc_csu_fini>:
 804a150:	f3 c3                	repz ret 

Disassembly of section .fini:

0804a154 <_fini>:
 804a154:	53                   	push   %ebx
 804a155:	83 ec 08             	sub    $0x8,%esp
 804a158:	e8 53 e8 ff ff       	call   80489b0 <__x86.get_pc_thunk.bx>
 804a15d:	81 c3 a3 2e 00 00    	add    $0x2ea3,%ebx
 804a163:	83 c4 08             	add    $0x8,%esp
 804a166:	5b                   	pop    %ebx
 804a167:	c3                   	ret    
